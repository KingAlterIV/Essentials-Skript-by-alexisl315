# |-> Essentials (Skript) << # |->> Skript developed by alexisl315 (Lennord)

# |-> This skript plugin allows you to redo all systems (commands, permissions ...) then improved them but in skript !

#  |-> Essentials Update 1.16

options:
	
	# |-> CONFIG

		# |-> SPAWN COOLDOWN USE !

			Essentials-use-spawn-cooldown: true
			Essentials-teleport-spawn-cooldown: 10

		# |-> WARP COOLDOWN USE !

			Essentials-use-warp-cooldown: true
			Essentials-teleport-warp-cooldown: 10

		# |-> HOME COOLDOWN USE !

			Essentials-use-home-cooldown: true
			Essentials-teleport-home-cooldown: 10

		# |-> BACK COOLDOWN USE !

			Essentials-use-back-cooldown: true
			Essentials-teleport-back-cooldown: 10

		# |-> TPA COOLDOWN USE !

			Essentials-use-tpa-cooldown: true
			Essentials-teleport-tpa-cooldown: 10

		# |-> KIT COOLDOWN USE !

			Essentials-use-kit-cooldown: true
			Essentials-give-kit-cooldown: 10

		# |-> AFK COOLDOWN USE !

			Essentials-use-afk-cooldown: true
			Essentials-kick-afk-cooldown: 300

		# |-> MAINTENANCE COOLDOWN USE !

			Essentials-maintenance-cooldown: 60

		# |-> FIRST JOIN MONEY USE !

			Essentials-money-to-firstjoin-use: true
			Essentials-money-to-firstjoin-numbers: 300

		# |-> FIRST JOIN MESSAGE USE !

			Essentials-firstjoin-message: true

		# |-> JOIN AND QUIT MESSAGE USE !

			Essentials-join-message: true
			Essentials-quit-message: true

		# |-> JOIN TELEPORTATION SPAWN USE !

			Essentials-join-teleport-to-spawn: true

		# |-> DEATH MESSAGE USE !

			Essentials-death-message: true

		# |-> DEATH TELEPORTATION SPAWN USE !

			Essentials-death-teleport-to-spawn: true

		# |-> CHAT FORMAT USE !

			Essentials-chat-format-use: true

		# |-> NEAR RADIUS NUMBER TYPE !

			Essentials-near-player-radius: 200

		# |-> DAMAGE ALL USE !

			Essentials-damage-all: true

		# |-> PORTALS CREATE USE !

			Essentials-portals-create: true

		# |-> TRASH SLOT MENU AND TRASH NAME !

			Essentials-trash-numbers-slot: 3
			Essentials-trash-named: &6| &0Trash &6|

		# |-> WEATHER THUNDER AND RAIN USE !

			Essentials-weather-thunder: true
			Essentials-weather-rain: true

		# |-> EMOTICONS TYPES USE !

			Essentials-emoticon-use: true

		# |-> DEATH REMOVE MONEY USE !

			Essentials-death-to-remove-to-money-use: false
			Essentials-death-to-remove-to-money: 5

		# |-> RANDOM TELEPORTATION USE ! - PART.01

			Essentials-randomteleport-use-cooldown: true
			Essentials-randomteleport-teleport-cooldown: 10

		# |-> RANDOM TELEPORTATION USE ! - PART.02

			Essentials-randomteleport-to-x-coord-min: -1000
			Essentials-randomteleport-to-x-coord-max: 1000

			Essentials-randomteleport-to-z-coord-min: -1000
			Essentials-randomteleport-to-z-coord-max: 1000

		# |-> RANDOM TELEPORTATION USE ! - PART.03

			Essentials-randomteleport-to-teleport-change-gamemode-to-creative: 30

	# |-> MESSAGES
		# [!] >> '%nl%' = Go to the line...

		# |-> CONSOLE EXECUTE COMMAND MESSAGE !

			Essentials-if-sender-is-console-use-commands: &cYou cannot use this command through the &6Console &c!

		# |-> COMMAND ARGUMENT MESSAGE !

			Essentials-if-player-is-not-set-to-argument: &cThis player is not connected to the server !

		# |-> PLAYER PERMISSION MESSAGE !

			Essentials-player-has-not-permission-use-commands: &cYou do not have permission to use this command !

		# |-> ANTI-BUILD MESSAGE !

			Essentials-antibuild-use: &cYou cannot build or destroy on the server !

		# |-> FIRST JOIN CONNECT MESSAGE !

			Essentials-firstjoin-message-use: &c%{Essentials.nick.%player%}% &6joined the game for the first time !

		# |-> JOIN AND QUIT MESSAGE !

			Essentials-join-message-use: &c%{Essentials.nick.%player%}% &6joined the game !
			Essentials-quit-message-use: &c%{Essentials.nick.%player%}% &6left the game !

		# |-> DEATH MESSAGE !

			Essentials-death-message-use: &c%{Essentials.nick.%player%}% &6is dead !

		# |-> CHAT FORMAT MESSAGE !

			Essentials-chat-format-msg-no-color: &7%{Essentials.nick.%player%}%&6: &f%message%
			Essentials-chat-format-msg-color: &7%{Essentials.nick.%player%}%&6: &f%colored message%

		# |-> CHAT MUTE MESSAGE !

			Essentials-chat-mute-message: &cSorry, but you cannot speak because you have been reduced to silent mode !

		# |-> CHAT DISABLE MESSAGE !

			Essentials-chat-disable-message-use: &cSorry, but the Chat has been disabled by a staff member !

		# |-> BAN AND BANIP REASON MESSAGE !

			Essentials-ban-reason-banned: &cYou were banned because you did not follow the server policies !
			Essentials-banip-reason-banned: &cYou were banned because you did not follow the server policies !

		# |-> MAINTENANCE KICK REASON MESSAGE !

			Essentials-maintenance-reason-kick: &cYou have been kicked from the server because the server is now under maintenance !

		# |-> SIGN CREATE MESSAGE ! - P.01

			Essentials-sign-create: &7You have created a panel !

		# |-> SIGN CREATE MESSAGE ! - P.02

			Essentials-sign-create-warp-no-warp: &cYou have no warp with this name !

		# |-> LOADING AND UNLOADING MESSAGE !

			Essentials-loading-msg-console: &7[Essentials] &6| &7Activation
			Essentials-unloading-msg-console: &7[Essentials] &6| &7Deactivation

		# |-> NO-DROP MESSAGE !

			Essentials-no-drop: &cYour have not permission for dropped items and more...

		# |-> WORLD CREATE MESSAGE !

			Essentials-world-to-create: &7A new world just got loaded !

		# |-> MOTD MESSAGE !

			Essentials-motd-to-server: &7[&6New Server&7] &6| &7&oWelcome to the server Minigames !

		# |-> MESSAGE COMMAND (SETSPAWN, DELSPAWN AND SPAWN) !

			Essentials-setspawn-set-spawn-point: &7You have created the new spawn point !

			Essentials-delspawn-delete-spawn-point: &7You removed the spawn point !
			Essentials-delspawn-no-spawn-point: &cSpawn point does not exist !

			Essentials-spawn-no-spawn-point: &cSpawn point does not exist !
			Essentials-spawn-teleport-player: &7You have been teleported to the server spawn point !
			Essentials-spawn-teleport-player-coodown: &cYou must wait %{Essentials-teleport-spawn-cooldown.variable}% &cseconds to teleport to the spawn point !
			Essentials-spawn-teleport-player-of-me: &cYou cannot teleport yourself !
			Essentials-spawn-teleport-player-admin: &7You teleported the player &c%{Essentials.nick.%arg 1%}% &7to the point of spawn !

		# |-> MESSAGE COMMAND (HEAL AND FEED) !

			Essentials-heal-heal-to-me: &7You have been heal !
			Essentials-heal-heal-to-player: &7You have been heal !
			Essentials-heal-heal-to-player-admin: &7You heal the player &c%{Essentials.nick.%arg 1%}% &7!
			Essentials-heal-heal-of-me: &cYou can't heal yourself !

			Essentials-feed-feed-to-me: &7You were feed !
			Essentials-feed-feed-to-player: &7You were feed !
			Essentials-feed-feed-to-player-admin: &7You feed the player &c%{Essentials.nick.%arg 1%}% &7!
			Essentials-feed-feed-of-me: &cYou can't feed yourself !

		# |-> MESSAGE COMMAND (ESSENTIALS) !

			Essentials-essentials-none-arguments: &cYou must use the right arguments ! ('reload' and 'info')
			Essentials-essentials-reload: &cThe plugin has been successfully restarted !
			Essentials-essentials-infos: &7Creator of plugin&6: &cAlexisl315 &7(Aliases: &cLennord&7)%nl%&7Version of plugin&6: &c1.16%nl%&7Support version&6: &c1.9-1.16.5%nl%&7Plugins required&6: &cSkript&7/&cSkQuery &7and &cSkungee &7(for &cBungeecord&7)

		# |-> MESSAGE COMMAND (TP) !

			Essentials-tp-none-arguments: &cYou must put the name of a player to use this command !
			Essentials-tp-teleport-player: &7You have been successfully teleported !
			Essentials-tp-teleport-player-of-me: &cYou cannot teleport yourself !
			Essentials-tp-teleport-player-admin: &c&7You teleported the player &c%{Essentials.nick.%arg 1%}% &7to the player &c%{Essentials.nick.%arg 2%}% &7!

		# |-> MESSAGE COMMAND (BROADCAST) !

			Essentials-broadcast-none-arguments: &cYou must put a text to be able to use this command !
			Essentials-broadcast-message-no-color: &c&oAnnouncement of server&6: &f%arg 1%
			Essentials-broadcast-message-color: &6&oAnnouncement of server&6: &f%colored arg 1%

		# |-> MESSAGE COMMAND (SUICIDE) !

			Essentials-suicide-suicide: &7The player &c%{Essentials.nick.%player%}% &7committed suicide !

		# |-> MESSAGE COMMAND (CLEARINVENTORY) !

			Essentials-clearinventory-clear-to-me: &7You have deleted your inventory !
			Essentials-clearinventory-clear-player-of-me: &cYou cannot delete your inventory yourself !
			Essentials-clearinventory-clear-to-player: &7Your inventory has been deleted !
			Essentials-clearinventory-clear-to-player-admin: &7Player's inventory &c%{Essentials.nick.%arg 1%}% &7has been successfully deleted !

		# |-> MESSAGE COMMAND (TPALL) !

			Essentials-tpall-teleport-to-player-admin: &7You have teleported all players to your location !

		# |-> MESSAGE COMMAND (FLY) !

			Essentials-fly-fly-to-me-is-on: &7Your flight mode has been activated !
			Essentials-fly-fly-to-me-is-off: &7Your flight mode has been deactivated !

			Essentials-fly-fly-to-player-is-on: &7Your flight mode has been activated !
			Essentials-fly-fly-to-player-is-off: &7Your flight mode has been deactivated !

			Essentials-fly-fly-to-player-admin-is-on: &7Player's flying mode &c%{Essentials.nick.%arg 1%}% &7has been activated !
			Essentials-fly-fly-to-player-admin-is-off: &7Player's flying mode &c%{Essentials.nick.%arg 1%}% &7has been deactivated !

			Essentials-fly-fly-player-of-me: &cYou cannot activate or deactivate your own flight mode !

		# |-> MESSAGE COMMAND (ME) !

			Essentials-me-none-arguments: &cYou must put a text to be able to use this command !
			Essentials-me-message-no-color: &f* %{Essentials.nick.%player%}% &6>> &f%arg 1%
			Essentials-me-message-color: &f* %{Essentials.nick.%player%}% &6>> &f%colored arg 1%
 
		# |-> MESSAGE COMMAND (GAMEMODE) !

			Essentials-gamemode-none-arguments: &cYou must put the name of a gamemode to be able to use this command ! (0, 1, 2 and 3 = survival, creative, adventure and spectator)
			Essentials-gamemode-player-of-me: &cYou cannot change your own gamemode !

			Essentials-gamemode-survival-to-me: &7Your gamemode has been successfully changed &c(Survival) &7!
			Essentials-gamemode-creative-to-me: &7Your gamemode has been successfully changed &c(Creative) &7!
			Essentials-gamemode-adventure-to-me: &7Your gamemode has been successfully changed &c(Adventure) &7!
			Essentials-gamemode-spectator-to-me: &7Your gamemode has been successfully changed &c(Spectator) &7!

			Essentials-gamemode-survival-to-player: &7Your gamemode has been successfully changed &c(Survival) &7!
			Essentials-gamemode-creative-to-player: &7Your gamemode has been successfully changed &c(Creative) &7!
			Essentials-gamemode-adventure-to-player: &7Your gamemode has been successfully changed &c(Adventure) &7!
			Essentials-gamemode-spectator-to-player: &7Your gamemode has been successfully changed &c(Spectator) &7!

			Essentials-gamemode-survival-to-player-admin: &7Player's gamemode &c%{Essentials.nick.%arg 2%}% &7has been successfully changed &c(Survival) &7!
			Essentials-gamemode-creative-to-player-admin: &7Player's gamemode &c%{Essentials.nick.%arg 2%}% &7has been successfully changed &c(Creative) &7!
			Essentials-gamemode-adventure-to-player-admin: &7Player's gamemode &c%{Essentials.nick.%arg 2%}% &7has been successfully changed &c(Adventure) &7!
			Essentials-gamemode-spectator-to-player-admin: &7Player's gamemode &c%{Essentials.nick.%arg 2%}% &7has been successfully changed &c(Spectator) &7!

			Essentials-gamemode-survival-to-player-admin-gamemode-is-set: &cPlayer's gamemode &c%{Essentials.nick.%arg 2%}% &chas already have this gamemode (Survival) !
			Essentials-gamemode-creative-to-player-admin-gamemode-is-set: &cPlayer's gamemode &c%{Essentials.nick.%arg 2%}% &chas already have this gamemode (Creative) !
			Essentials-gamemode-adventure-to-player-admin-gamemode-is-set: &cPlayer's gamemode &c%{Essentials.nick.%arg 2%}% &chas already have this gamemode (Adventure) !
			Essentials-gamemode-spectator-to-player-admin-gamemode-is-set: &cPlayer's gamemode &c%{Essentials.nick.%arg 2%}% &chas already have this gamemode (Spectator) !

			Essentials-gamemode-survival-to-me-gamemode-is-set: &cYou already have this gamemode &c(Survival) &c!
			Essentials-gamemode-creative-to-me-gamemode-is-set: &cYou already have this gamemode &c(Creative) &c!
			Essentials-gamemode-adventure-to-me-gamemode-is-set: &cYou already have this gamemode &c(Adventure) &c!
			Essentials-gamemode-spectator-to-me-gamemode-is-set: &cYou already have this gamemode &c(Spectator) &c!

			Essentials-gamemode-survival-to-player-gamemode-is-set: &cYou already have this gamemode &c(Survival) &c!
			Essentials-gamemode-creative-to-player-gamemode-is-set: &cYou already have this gamemode &c(Creative) &c!
			Essentials-gamemode-adventure-to-player-gamemode-is-set: &cYou already have this gamemode &c(Adventure) &c!
			Essentials-gamemode-spectator-to-player-gamemode-is-set: &cYou already have this gamemode &c(Spectator) &c!

		# |-> MESSAGE COMMAND (HELPOP) !

			Essentials-helpop-none-arguments: &cYou must put a text to be able to use this command !
			Essentials-helpop-message: &c&l[&cHelpop&c&l] &f%{Essentials.nick.%player%}%&6: &f%arg 1%

		# |-> MESSAGE COMMAND (KICK) !

			Essentials-kick-none-arguments-one: &cYou must put the name of a player to use this command !
			Essentials-kick-none-arguments-two: &cYou must put a text to be able to use this command !
			Essentials-kick-broadcast: &6The player &c%{Essentials.nick.%arg 1%}% &6has been excluded from the server !
			Essentials-kick-to-player: &cYou have been excluded from the server !%nl%&6Reason: &c%arg 2%

		# |-> MESSAGE COMMAND (FREEZE) !

			Essentials-freeze-none-arguments: &cYou must put the name of a player to use this command !

			Essentials-freeze-to-player-to-on: &7You have been frozen !
			Essentials-freeze-to-player-to-off: &7You have been unfrozen !

			Essentials-freeze-to-player-admin-to-on: &7You have frozen the player &c%{Essentials.nick.%arg 1%}% &c!
			Essentials-freeze-to-player-admin-to-off: &7You have unfrozen the player &c%{Essentials.nick.%arg 1%}% &c!

		# |-> MESSAGE COMMAND (TPHERE) !

			Essentials-tphere-none-arguments: &cYou must put the name of a player to use this command !

			Essentials-tphere-to-player: &7You have been teleported to a player !
			Essentials-tphere-to-player-admin: &7You teleported the player &c%{Essentials.nick.%arg 1%}% &7to your location !

		# |-> MESSAGE COMMAND (IGNORE) !

			Essentials-ignore-none-arguments: &cYou must put the name of a player to use this command !
			Essentials-ignore-ignore-for-me: &cYou can't ignore yourself !
			Essentials-ignore-to-player-to-on: &7You ignored the player &c%{Essentials.nick.%arg 1%}% &7!
			Essentials-ignore-to-player-to-off: &7You have removed ignorance of the player &c%{Essentials.nick.%arg 1%}% &7!

		# |-> MESSAGE COMMAND (MSG) !

			Essentials-msg-none-arguments-one: &cYou must put the name of a player to use this command !
			Essentials-msg-none-arguments-two: &cYou must put a text to be able to use this command !

			Essentials-msg-ignore-to-player: &cYou cannot send a message to the player because you ignored it !

			Essentials-msg-for-me: &cYou cannot send a message yourself !

			Essentials-msg-msg-to-me-to-no-color: &7[&c%{Essentials.nick.%player%}% &7> %{Essentials.nick.%arg 1%}%] &6: &7%arg 2%
			Essentials-msg-msg-to-me-to-color: &7[&c%{Essentials.nick.%player%}% &7> %{Essentials.nick.%arg 1%}%] &6: &7%coloured arg 2%

			Essentials-msg-msg-to-player-to-no-color: &7[%{Essentials.nick.%player%}% > &c%{Essentials.nick.%arg 1%}%&7] &6: &7%arg 2%
			Essentials-msg-msg-to-player-to-color: &7[%{Essentials.nick.%player%}% > &c%{Essentials.nick.%arg 1%}%&7] &6: &7%colored arg 2%

		# |-> MESSAGE COMMAND (SETWARP, DELWARP, WARPS AND WARP) !

			Essentials-setwarp-none-arguments: &cYou must put the name of a warp to be able to use this command !
			Essentials-setwarp-create: &7You created the warp &c%arg 1% &7with success !
			Essentials-setwarp-is-create: &cThe warp %arg 1% &chas already been created !

			Essentials-delwarp-none-arguments: &cYou must put the name of a warp to be able to use this command
			Essentials-delwarp-delete: &7You have removed the warp &c%arg 1% &7with success !
			Essentials-delwarp-is-delete: &cThe warp %arg 1% &chas already been deleted !

			Essentials-warp-none-arguments-one: &cYou must put the name of a warp to be able to use this command !

			Essentials-warp-teleport-player-coodown: &cYou must wait %{Essentials-teleport-warp-cooldown.variable}% &cseconds to teleport to warp point !
			Essentials-warp-no-warps: &cThis warp does not exist !
			Essentials-warp-teleport-to-me: &7You have been successfully teleported to warp !
			Essentials-warp-teleport-to-player: &7You have been successfully teleported to warp !
			Essentials-warp-teleport-to-player-admin: &7You teleported the player &c%{Essentials.nick.%arg 2%}% &7to warp successfully !
			Essentials-warp-teleport-for-me: &cYou cannot teleport yourself !

			Essentials-warps-list: &7Warps&6: &c%{Essentials.warp.list::*}% &c!
			Essentials-warps-no-warp-list: &7Warps&6: &cNo warp !

		# |-> MESSAGE COMMAND (SKULL) !

			Essentials-skull-none-arguments: &cYou have to put the name of the head !
			Essentials-skull-give: &7You gave yourself a player's head... !

		# |-> MESSAGE COMMAND (ENDERCHEST) !

			Essentials-enderchest-open-to-me: &7You opened your enderchest !
			Essentials-enderchest-open-to-player: &7You have the player's enderchest &c%{Essentials.nick.%arg 1%}% &7!
			Essentials-enderchest-enderchest-open-for-me: &cYou cannot open your enderchest !

		# |-> MESSAGE COMMAND (AFK) !

			Essentials.afk-for-me: &cYou can't put yourself in afk mode !
			Essentials.afk.kick.to-broadcast: &cYou were kicked from the server because you were in AFK mode !

			Essentials-afk-to-me-to-broadcast-to-on: &c%{Essentials.nick.%player%}% &6is now in AFK mode !
			Essentials-afk-to-me-to-broadcast-to-off: &c%{Essentials.nick.%player%}% &6is no longer in AFK mode !

			Essentials-afk-to-player-to-broadcast-to-on: &c%{Essentials.nick.%arg 1%}% &6is now in AFK mode !
			Essentials-afk-to-player-to-broadcast-to-off: &c%{Essentials.nick.%arg 1%}% &6is no longer in AFK mode !

		# |-> MESSAGE COMMAND (TIME) !

			Essentials-time-none-arguments-one: &cYou must use the right arguments ! ('set')
			Essentials-time-none-arguments-two: &cYou must use the right arguments ! ('day' and 'night')

			Essentials-time-day: &7You successfully put the day down!
			Essentials-time-night: &7You successfully put the night down !

		# |-> MESSAGE COMMAND (DAY AND NIGHT) !

			Essentials-day: &7You successfully put the day down!
			Essentials-night: &7You successfully put the night down !

		# |-> MESSAGE COMMAND (SLAP) !

			Essentials-slap-none-arguments: &cYou must put the name of a player to use this command !

			Essentials-slap-to-player: &7You were slapped !
			Essentials-slap-to-player-admin: &7You slapped the player &c%{Essentials.nick.%arg 1%}% &7!

		# |-> MESSAGE COMMAND (SPEED) !

			Essentials-speed-none-arguments-one: &cYou have to put the right arguments ! ('fly', 'walk' and 'reset')
			Essentials-speed-none-arguments-two: &cYou must put a number ! (of 0 at 1 | Ex: 0.5)

			Essentials-speed-fly-modify: &7You have changed your speed mode from flight mode !
			Essentials-speed-walk-modify: &7You have changed your speed mode from the walking mode !
			Essentials-speed-reset-modify: &7You have reset the flight and walking modes by default !

		# |-> MESSAGE COMMAND (MUTE AND UNMUTE) !

			Essentials-mute-none-arguments-one: &cYou must put the name of a player to use this command !
			Essentials-mute-none-arguments-two: &cYou must put a number ! (in seconds | Ex: 60)

			Essentials-mute-for-me: &cYou cannot reduce yourself to silent mode yourself !
			Essentials-mute-broadcast: &7The player &c%{Essentials.nick.%arg 1%}% &7has been reduced to silent mode !
			Essentials-mute-mute-already: &cThe player &c%{Essentials.nick.%arg 1%}% &cis already in silent mode !

			Essentials-unmute-none-arguments: &cYou must put the name of a player to use this command !
			Essentials-unmute-broadcast: &7The player &c%{Essentials.nick.%arg 1%}% &7can talk again !
			Essentials-unmute-unmute-already: &cThe player &c%{Essentials.nick.%arg 1%}% &cis already in no-silent mode !

		# |-> MESSAGE COMMAND (KICKALL) !

			Essentials-kickall-none-arguments: &cYou must put the name of a player to use this command !

			Essentials-kickall-kick-broadcast: &cYou have been excluded from the server !%nl%&6Reason: &c%arg 1%

		# |-> MESSAGE COMMAND (NICK) !

			Essentials-nick-none-arguments: &cYou need a name to be able to use this command !

			Essentials-nick-nick-name-to-me: &7You changed your name, so you call yourself now &c%{Essentials.nick.%player%}% &7!
			Essentials-nick-nick-name-to-player: &7Your player name has been changed, so you will be called now &c%{Essentials.nick.%arg 2%}% &7!
			Essentials-nick-nick-name-to-player-admin: &7Le nom du joueur &c%arg 2% &7as été changé, du-coup il s'appelle maintenant &c%{Essentials.nick.%arg 2%}% &7!

			Essentials-nick-nick-reset-to-me: &7You changed your name, so you call yourself now &c%{Essentials.nick.%player%}% &7!
			Essentials-nick-nick-reset-to-player: &7You changed your name, so you call yourself now &c%{Essentials.nick.%arg 2%}% &7!
			Essentials-nick-nick-reset-to-player-admin: &7The player's name &c%arg 2% &7have been changed, so it's now called &c%{Essentials.nick.%arg 2%}% &7!

		# |-> MESSAGE COMMAND (HOME, SETHOME, DELHOME AND HOMES) !

			Essentials-home-none-arguments: &cYou need a name of your home to be able to use this command !

			Essentials.home.no.home: &cYou don't have a home !
			Essentials.home.teleport-to-me: &7You have been teleported to your home !
			Essentials-home-teleport-player-coodown: &cYou must wait %{Essentials-teleport-home-cooldown.variable}% &cseconds to teleport to your home !

			Essentials-sethome-none-arguments: &cYou need a name of your home to be able to use this command !
			Essentials-sethome-sethome: &7You created the home &c%arg 1% &7!
			Essentials-sethome-home-name-is-set: &cYou have already created the home %arg 1% &c!
			Essentials-sethome-home-is-max-home: &cYou have reached the limit to create another home !

			Essentials-delhome-none-arguments: &cYou need a name of your home to be able to use this command !
			Essentials-delhome-delhome: &7You deleted the home &c%arg 1% &7!

			Essentials-homes-list: &7Homes&6: &c%{Essentials.homes.%player%.list::*}% &c!
			Essentials-homes-no-home-list: &7Homes&6: &cNo home !

	#	if player has permission "essentials.home.NUMBER-OF-HOME" or "essentials.*": 
	#		if {Essentials.home.numbers.%player%} = NUMBER-OF-HOME":
	#			send "{@Essentials-sethome-home-is-max-home}" to player
	#			stop

command /sethome [<text>]:
	executable by: player and console
	aliases: essentials:sethome
	description: &fEssentials command /sethome !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-sethome-none-arguments}" to player
				stop
			if arg 1 is set:
				if player has permission "essentials.home.2" or "essentials.*":
					if {Essentials.home.numbers.%player%} = 2:
						send "{@Essentials-sethome-home-is-max-home}" to player
						stop
				if {Essentials.home.%player%::%arg 1%} is not set:
					add 1 to {Essentials.home.numbers.%player%}
					send "{@Essentials-sethome-sethome}" to player
					set {Essentials.home.%player%::%arg 1%} to location of player
					set {Essentials.homes.%player%.list::%arg 1%} to arg 1
					stop
				else:
					send "{@Essentials-sethome-home-name-is-set}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

options:
	# |-> MESSAGES
		# [!] >> '%nl%' = Go to the line...

		# |-> MESSAGE COMMAND (ADMINHOME) !

		Essentials-adminhome-none-arguments: &cYou must use the right arguments ! ('delhome', 'reset', 'homes', 'home' and 'sethome')

		Essentials-adminhome-reset-none-arguments: &cYou must put a player's name to be able to use this command !
		Essentials-adminhome-reset-home-is-not-set: &cThis player does not have a home !

		Essentials-adminhome-homes-none-arguments: &cYou must put a player's name to be able to use this command !

		Essentials-adminhome-home-none-arguments-one: &cYou must put a player's name to be able to use this command !
		Essentials-adminhome-home-none-arguments-two: &cYou must put the name of a home to be able to use this command !

		Essentials-adminhome-delhome-none-arguments-one: &cYou must put a player's name to be able to use this command !
		Essentials-adminhome-delhome-none-arguments-two: &cYou must put the name of a home to be able to use this command !

		Essentials-adminhome-sethome-none-arguments-one: &cYou must put a player's name to be able to use this command !
		Essentials-adminhome-sethome-none-arguments-two: &cYou must put the name of a home to be able to use this command !

		Essentials-adminhome-reset: &7You have deleted all of the player's homes &c%{Essentials.nick.%arg 2%}% &7!
		Essentials-adminhome-homes: &7Homes&6: &c%{Essentials.homes.%arg 2%.list::*}% &c!
		Essentials-adminhome-no-home-list: &7Homes&6: &cNo home !

		Essentials-adminhome-teleport-home: &7You had been teleported to the player's home &c%{Essentials.nick.%arg 2%}% &7!
		Essentials-adminhome-teleport-home-is-not-set: &cThis home does not exist !

		Essentials-adminhome-delhome-home-is-not-set: &cThis home does not exist !
		Essentials-adminhome-delhome: &7You deleted this home for the player &c%{Essentials.nick.%arg 2%}% &7!

		Essentials-adminhome-sethome-home-is-set: &cThis home already exists !
		Essentials-adminhome-sethome: &7You have created this home for the player &c%{Essentials.nick.%arg 2%}% &7!

		# |-> MESSAGE COMMAND (ECO) !

		Essentials-eco-none-arguments: &cYou must use the right arguments ! ('remove', 'give' and 'set')

		Essentials-eco-set-none-arguments-one: &cYou must put the name of a player to be able to use this command !
		Essentials-eco-set-none-arguments-two: &cYou must put a sum of money to be able to use this command !

		Essentials-eco-give-none-arguments-one: &cYou must put the name of a player to be able to use this command !
		Essentials-eco-give-none-arguments-two: &cYou must put a sum of money to be able to use this command !

		Essentials-eco-remove-none-arguments-one: &cYou must put the name of a player to be able to use this command !
		Essentials-eco-remove-none-arguments-two: &cYou must put a sum of money to be able to use this command !

		Essentials-eco-set-player-to-player: &7Your amount of money has been changed !
		Essentials-eco-set-player-to-player-admin: &7The player's money &c%{Essentials.nick.%arg 2%}% &7has been changed &7!

		Essentials-eco-give-player-to-player: &7Your amount of money has been changed !
		Essentials-eco-give-player-to-player-admin: &7The player's money &c%{Essentials.nick.%arg 2%}% &7has been changed &7!

		Essentials-eco-remove-player-to-player: &7Your amount of money has been changed !
		Essentials-eco-remove-player-to-player-admin: &7The player's money &c%{Essentials.nick.%arg 2%}% &7has been changed &7!
		Essentials-eco-remove-no-money-max-player-to-player-admin: &cThe player's money %{Essentials.nick.%arg 2%}% &ccannot be changed because the amount of money is too small compared to the amount you have put !

		# |-> MESSAGE COMMAND (MONEY) !

		Essentials-money-set-none-arguments: &cYou must put a sum of money to be able to use this command !

		Essentials-money-if-player-of-me: &cYou can't watch your money yourself !
		Essentials-money-to-me: &7Money&6: &c%{Essentials.money.%player%}%
		Essentials-money-to-player-admin: &7The player's money &c%{Essentials.nick.%arg 1%}%&6: &c%{Essentials.money.%arg 1%}%
		Essentials-money-if-money-is-not-set: &7Money&6: &c0

		# |-> MESSAGE COMMAND (PAY) !

		Essentials-pay-set-none-arguments-one: &cYou must put the name of a player to be able to use this command !
		Essentials-pay-set-none-arguments-two: &cYou must put a sum of money to be able to use this command !

		Essentials-pay-is-negative-numbers: &cYou must put a positive number !
		Essentials-pay-if-player-of-me: &cYou cannot pay yourself !
		Essentials-pay-if-player-is-not-money: &cYou don't have enough money to pay this player !

		Essentials-pay-to-player-admin: &7You paid &c%arg 3% &7to the player &c%{Essentials.nick.%arg 2%}% &7!
		Essentials-pay-to-player: &7You got paid &c%arg 3% &7by the player &c%{Essentials.nick.%player%}% &7!

		# |-> MESSAGE COMMAND (GOD) !

		Essentials-god-if-player-of-me: &cYou cannot put the god mode yourself !

		Essentials-god-to-me-to-on: &7Your god mode has been activated !
		Essentials-god-to-me-to-off: &7Your god mode has been deactivated !

		Essentials-god-to-player-to-on: &7Your god mode has been activated !
		Essentials-god-to-player-to-off: &7Your god mode has been deactivated !

		Essentials-god-to-player-admin-to-on: &7The player god mode &c%arg 1% &7has been successfully activated !
		Essentials-god-to-player-admin-to-off: &The player god mode &c%arg 1% &7has been successfully activated !

		# |-> MESSAGE COMMAND (GETPOS) !

		Essentials-getpos-if-player-of-me: &cYou cannot see your location yourself !

		Essentials-getpos-for-to-me: &7%{Essentials.nick.%player%}%&6: &c%player's location% &c!
		Essentials-getpos-for-to-player-admin: &7%{Essentials.nick.%arg 1%}%&6: &c%arg 1's location% &c!

		# |-> MESSAGE COMMAND (LIST) !

		Essentials-list: &7List of players connected to the server&6: &c%all players% &c!

		# |-> MESSAGE COMMAND (BACK) !

		Essentials-back-no-back-point-to-me: &cYou have no return point !
		Essentials-back-no-back-point-to-player-admin: &cThis player has no return point !

		Essentials-back-teleport-player-coodown: &cYou must wait %{Essentials-teleport-back-cooldown.variable}% &cseconds to teleport to your return point !
		Essentials-back-teleport: &7You have been successfully teleported !
		Essentials-back-teleport-to-player: &7You have been successfully teleported !
		Essentials-back-teleport-to-player-admin: &7This player has been successfully teleported to his return point !

		Essentials-back-if-player-of-me: &cYou cannot teleport yourself !

		# |-> MESSAGE COMMAND (XP) !

		Essentials-xp-none-arguments: &cYou must use the right arguments ! ('show', 'set', 'give' and 'remove')

		Essentials-xp-set-none-arguments-one: &cYou must put the name of a player to be able to use this command !
		Essentials-xp-give-none-arguments-one: &cYou must put the name of a player to be able to use this command !
		Essentials-xp-remove-none-arguments-one: &cYou must put the name of a player to be able to use this command !

		Essentials-xp-set-none-arguments-two: &cYou must put a positive number to be able to use this command !
		Essentials-xp-give-none-arguments-two: &cYou must put a positive number to be able to use this command !
		Essentials-xp-remove-none-arguments-two: &cYou must put a positive number to be able to use this command !

		Essentials-xp-show-if-player-of-me: &cYou can't see your xp yourself !
		Essentials-xp-show-to-me: &7Your level&6: &c%player's level% &clevels &7!
		Essentials-xp-show-to-player-admin: &7The player levels %{Essentials.nick.%arg 2%}%&6: &c%arg 2's level% &cniveaux &7!

		Essentials-xp-set-to-player: &7Your XP levels have been changed !
		Essentials-xp-set-to-player-admin: &7The player levels &c%{Essentials.nick.%arg 2%}% &7we were successfully changed !

		Essentials-xp-give-to-player: &7Your XP levels have been changed !
		Essentials-xp-give-to-player-admin: &7The player levels &c%{Essentials.nick.%arg 2%}% &7we were successfully changed !

		Essentials-xp-remove-to-player: &7Your XP levels have been changed !
		Essentials-xp-remove-to-player-admin: &7The player levels &c%{Essentials.nick.%arg 2%}% &7we were successfully changed !

		# |-> MESSAGE COMMAND (BREAK) !

		Essentials-break: &7You broke the target block !
	
		# |-> MESSAGE COMMAND (ANTIOCH) !

		Essentials-antioch: &7You have created an explosive tnt !

		# |-> MESSAGE COMMAND (UNBANIP) !

		Essentials-unbanip-none-arguments: &cYou must put the name of a player to be able to use this command !
		Essentials-unbanip-to-player-admin: &7You successfully banned the player's ip !
		Essentials-unbanip-if-ip-of-player-is-unbanned: &cYou have already unbanned the player's ip !

		# |-> MESSAGE COMMAND (UNBAN) !

		Essentials-unban-none-arguments: &cYou must put the name of a player to be able to use this command !
		Essentials-unban-to-player-admin: &7You successfully unbanned the player !
		Essentials-unban-if-player-is-unbanned: &cYou have already unbanned the player !

		# |-> MESSAGE COMMAND (BANIP) !

		Essentials-banip-none-arguments: &cYou must put the name of a player to be able to use this command !
		Essentials-banip-to-player-admin: &7You successfully unbanned the player's ip !
		Essentials-banip-if-ip-of-player-is-banned: &cYou have already banned the player's ip !

		# |-> MESSAGE COMMAND (BAN) !

		Essentials-ban-none-arguments: &cYou must put the name of a player to be able to use this command !
		Essentials-ban-to-player-admin: &7You successfully banned the player !
		Essentials-ban-if-player-is-banned: &cYou have already banned the player !

		# |-> MESSAGE COMMAND (WORKBENCH) !

		Essentials-workbench: &7You opened a craft table !

		# |-> MESSAGE COMMAND (UNLIMITED) !

		Essentials-unlimited-if-player-of-me: &cYou cannot have unlimited blocks yourself !

		Essentials-unlimited-to-me-on: &7You have enabled unlimited block mode !
		Essentials-unlimited-to-me-off: &7You have disabled unlimited block mode !

		Essentials-unlimited-to-player-on: &7You have enabled unlimited block mode !
		Essentials-unlimited-to-player-admin-on: &7You have activated the player’s unlimited blocks mode &c%{Essentials.nick.%arg 1%}% &7!

		Essentials-unlimited-to-player-off: &7You have disabled unlimited block mode !
		Essentials-unlimited-to-player-admin-off: &7You have disabled player’s unlimited block mode &c%{Essentials.nick.%arg 1%}% &7!

		# |-> MESSAGE COMMAND (DEPTH) !

		Essentials-depth-if-player-of-me: &cYou cannot have unlimited blocks yourself !

		Essentials-depth-to-me: &7You are &c%altitude of the player% &7above the bedrock !
		Essentials-depth-to-player-admin: &7This player is &c%altitude of the arg 1% &7above the bedrock !

		# |-> MESSAGE COMMAND (EXT) !

		Essentials-ext-if-player-of-me: &cYou can't put out the fire yourself !

		Essentials-ext-to-me: &7You put out the fire on you !

		Essentials-ext-to-player: &7The fire on you was put out &7!
		Essentials-ext-to-player-admin: &7You put out the fire on the player &c%{Essentials.nick.%arg 1%}% &7!

		# |-> MESSAGE COMMAND (FIREBALL) !

		Essentials-fireball: &7You threw a fireball !

		# |-> MESSAGE COMMAND (INVSEE) !

		Essentials-invsee-none-arguments: &cYou must put the name of a player to be able to use this command !

		Essentials-invsee-to-me: &7You have opened the player inventory &c%{Essentials.nick.%arg 1%}% &7!

		# |-> MESSAGE COMMAND (ENCHANT) !

		Essentials-enchant-none-arguments: &cYou must put the name of an enchantment to be able to use this command !

		Essentials-enchant-if-item-is-air: &cYou can't enchant air !
		Essentials-enchant: &7You have enchanted your object !

		# |-> MESSAGE COMMAND (TPA, TPACCEPT AND TPDENY) !

		Essentials-tpa-none-arguments: &cYou must put the name of a player to be able to use this command !
		Essentials-tpa-if-player-of-me: &cYou may not have asked yourself for a teleportation request yourself !

		Essentials-tpa-send-to-player-admin: &7You sent a teleportation request to &c%{Essentials.nick.%{Essentials.tpa.%arg 1%}%}% &7!
		Essentials-tpa-send-to-player: &7You have received a teleportation request from &c%{Essentials.nick.%{Essentials.tpa.%arg 1%}%}% &7!

		Essentials-tpaccept-send-to-player: &7Your request has been accepted or you will be teleported to &c%{Essentials-teleport-tpa-cooldown.variable}% &cseconds &7!
		Essentials-tpaccept-send-to-player-admin: &7You have accepted the request from &c%{Essentials.nick.%{Essentials.tpa.%player%}%}% &7!
		Essentials-tpaccept-no-player-to-tpa: &cYou have no teleportation request !
		Essentials-tpaccept-to-teleport-accept: &7Teleport to player successfully !

		Essentials-tpdeny-send-to-player: &7Your request has been refused !
		Essentials-tpdeny-send-to-player-admin: &7You refused the request !
		Essentials-tpdeny-no-player-to-tpa: &cYou have no teleportation request !

		# |-> MESSAGE COMMAND (TREE) !

		Essentials-tree-none-argument: &cYou must use the right arguments ! ('jungle', 'oak', 'spruce', 'birch' and 'darkwood')

		Essentials-tree: &7You have created a new tree !

		# |-> MESSAGE COMMAND (JAIL, SETJAIL, DELJAIL AND JAILS) !

		Essentials-jail-if-player-of-me: &cYou can't put yourself in a prison yourself !
		Essentials-jail-none-argument-one: &cYou must put the name of a player to be able to use this command !
		Essentials-jail-none-argument-two: &cYou must put the name of a prison to be able to use this command !
		Essentials-jail-no-jail: &7Jails: &cYou have no prison with this name !

		Essentials-jail-jail-to-player-admin: &7You removed the player from a prison &c%arg 1% &7!
		Essentials-jail-jail-to-player: &cYou have been put in prison &7!

		Essentials-jail-unjail-to-player-admin: &7You removed the player from a prison &c%arg 1% &7!
		Essentials-jail-unjail-to-player: &cYou were kidnapped in prison &7!

		Essentials-jail-jail-if-player-is-set-of-jail: &7You have already imprisoned the player &c%{Essentials.nick.%arg 1%}% &7!
		Essentials-jail-jail-if-player-is-set-of-unjail: &7You have already removed the player from a prison &c%arg 1% &7!

		Essentials-setjail-create-none-argument: &cYou must put the name of a prison to be able to use this command !
		Essentials-setjail-create-if-jail-is-set: &7You have already created the prison &c%arg 1% &7!
		Essentials-setjail-create-of-jail: &7You created the prison &c%arg 1% &7!

		Essentials-deljail-remove-none-argument: &cYou must put the name of a prison to be able to use this command !
		Essentials-deljail-remove-of-jail: &7You deleted the prison &c%arg 1% &7!
		Essentials-deljail-remove-no-jail: &cYou have no prison with this name !

		Essentials-jails: &7Jails: &c%{Essentials.list.jails::*}% &c!
		Essentials-jails-no-jail: &7Jails: &cNo prison !

		# |-> MESSAGE COMMAND (COMPASS) !

		Essentials-compass-to-me: &7Orientation: &c%player's facing% &7(&c%player's yaw% &cdegrees&7) !
		Essentials-compass-to-player-admin: &7Orientation: &c%player's facing% &7(&c%player's yaw% &cdegrees&7) !

		Essentials-compass-if-player-of-me: &cYou cannot use the compass yourself !

		# |-> MESSAGE COMMAND (SPAWNMOB) !

		Essentials-spawnmob-none-argument-one: &cYou must put the name of a mob to be able to use this command !
		Essentials-spawnmob-none-argument-two: &cYou must put a number to be able to use this command !

		Essentials-spawnmob: &7You created a mob !

		# |-> MESSAGE COMMAND (REPAIR) !

		Essentials-repair: &7You have repaired your object !
		Essentials-repair-all: &7You have repaired all your items !
		Essentials-repair-if-tool-is-air: &cYou can't fix the air !

		# |-> MESSAGE COMMAND (POWERTOOL) !

		Essentials-powertool-create: &7You have created an order in your object system !
		Essentials-powertool-remove: &7You have deleted all orders from your item !

		# |-> MESSAGE COMMAND (KIT, SETKIT, DELKIT AND KITS) !

		Essentials-kit-give-player-coodown: &7Your request has been accepted or you will be teleported to &c%{Essentials-give-kit-cooldown.variable}% &cseconds &7!

		Essentials-setkit-none-arguments: &cYou must put the name of a kit to be able to use this command !
		Essentials-delkit-none-arguments: &cYou must put the name of a kit to be able to use this command !
		Essentials-kit-none-arguments: &cYou must put the name of a kit to be able to use this command !

		Essentials-kit-give: &7You gave yourself the kit !
		Essentials-kit-if-kit-is-not-set: &cThis kit does not exist !

		Essentials-setkit-if-kit-is-set: &cYou have already created this kit !
		Essentials-setkit-create: &7This kit was successfully created !

		Essentials-delkit-delete: &7You removed this kit !
		Essentials-delkit-if-kit-is-not-set: &cThis kit does not exist !

		Essentials-kits-no-kit: &7Kits: &cNo kit !
		Essentials-kits: &7Kits: &c%{Essentials.kit::*}% !

		# |-> MESSAGE COMMAND (TRASH) !

		Essentials-trash: &7You opened a trash can !

		# |-> MESSAGE COMMAND (VANISH) !

		Essentials-vanish-to-me-to-on: &7You have activated your vanish mode !
		Essentials-vanish-to-me-to-off: &7You have disabled your vanish mode !

		Essentials-vanish-to-player-to-on: &7Your vanish mode has been activated !
		Essentials-vanish-to-player-to-off: &7Your vanish mode has been disabled !

		Essentials-vanish-to-player-admin-to-on: &7You have activated the player's vanish mode &c%{Essentials.nick.%arg 1%}% &7!
		Essentials-vanish-to-player-admin-to-off: &7You have disabled player's vanish mode &c%{Essentials.nick.%arg 1%}% &7!

		Essentials-vanish-if-player-of-me: &cYou cannot go into vanish mode yourself !

		# |-> MESSAGE COMMAND (HAT) !

		Essentials-hat-none-argument: &cYou must use the right arguments ! ('off')

		Essentials-hat-to-me-to-hat-is-air: &cYou can't put air like a hat !
		Essentials-hat-to-me-if-hat-is-set: &7You no longer have hat !

		Essentials-hat-to-me: &7You now have a hat !

		Essentials-hat-to-player: &7You now have a hat !
		Essentials-hat-to-player-admin: &7The player &c%{Essentials.nick.%arg 2%}% &7now has a hat !

		Essentials-hat-to-player-to-off: &7Your hat has been removed from your inventory !
		Essentials-hat-to-player-admin-to-off: &7You removed the player's hat &c%{Essentials.nick.%arg 2%}% &7!

		Essentials-hat-if-player-of-me: &cYou cannot modify your hat yourself !

		# |-> MESSAGE COMMAND (OP AND DEOP) !

		Essentials-op-none-argument: &cYou must put the name of a player to be able to use this command !

		Essentials-op-to-player: &7You have been successfully placed as a server operator !
		Essentials-op-to-player-admin: &7The player &c%{Essentials.nick.%arg 1%}% &7has been successfully set server operator !
		Essentials-op-if-player-is-already-op: &cYou have already set the player %{Essentials.nick.%arg 1%}% &cserver operator !

		Essentials-deop-none-argument: &cYou must put the name of a player to be able to use this command !

		Essentials-deop-to-player: &7You have been removed operator from the server !
		Essentials-deop-to-player-admin: &7The player &c%{Essentials.nick.%arg 1%}% &7has been removed operator from the server successfully !
		Essentials-deop-if-player-is-already-deop: &cYou have already removed the player %{Essentials.nick.%arg 1%}% &cserver deoperator !

		# |-> MESSAGE COMMAND (WEATHER) !

		Essentials-weather-none-argument: &cYou must use the right arguments ! ('sun', 'rain', 'thunder' and 'clear')

		Essentials-weather-clear-to-world: &7You changed the weather, now the weather is nice !
		Essentials-weather-sun-to-world: &7You changed the weather, now the weather is nice !
		Essentials-weather-rain-to-world: &7You changed the weather, now it's raining !
		Essentials-weather-thunder-to-world: &7You changed the weather, now it's raining and storming !

		# |-> MESSAGE COMMAND (MAINTENANCE) !

		Essentials-maintenance-none-argument: &cYou must use the right arguments ! ('on' and 'off' or 'enable' and 'disable')

		Essentials-maintenance-to-enable:  &6&oAnnouncement of server&6: &cA maintenance will be activated in %{Essentials-kick-maintenance-cooldown.variable}% &cseconds, suddenly you will be kicked from the server !
		Essentials-maintenance-to-enable-to-already: &cServer maintenance is already activated !

		Essentials-maintenance-to-disable: &6&oAnnouncement of server&6: &cServer maintenance is complete !
		Essentials-maintenance-to-disable-to-already: &cServer maintenance is already disabled !

		# |-> MESSAGE COMMAND (MOTD) !

		Essentials-motd: &c_-_-_-_-_-_-_- &c&lMotd &c_-_-_-_-_-_-_-%nl%&cWelcome to the server !%nl%&c_-_-_-_-_-_-_- &c&lMotd &c_-_-_-_-_-_-_-

		# |-> MESSAGE COMMAND (THOR) !

		Essentials-thor: &7Thunderstorms are coming over this world !

		# |-> MESSAGE COMMAND (SEED) !

		Essentials-seed: &7Seed of world&6: &c%world's seed% &c!

		# |-> MESSAGE COMMAND (CHUNKSLIME) !

		Essentials-chunkslime-to-me-to-chunk-slime: &7This chunk is beautiful and a slime chunk !
		Essentials-chunkslime-to-me-to-no-chunk-slime: &7This chunk is not a slime chunk !

		Essentials-chunkslime-to-player-admin-to-chunk-slime: &7This chunk is beautiful and a slime chunk !
		Essentials-chunkslime-to-player-admin-to-no-chunk-slime: &7This chunk is not a slime chunk !

		Essentials-chunkslime-if-player-of-me: &cYou can't parse this chunk !

		# |-> MESSAGE COMMAND (FAKEBROADCASTMESSAGE) !

		Essentials-fbm-none-argument-one: &cYou must use the right arguments ! ('fake message' and 'list')
		Essentials-fbm-none-argument-two: &cYou must put the name of a player to be able to use this command !
		Essentials-fbm-list: &7List of fake message&6: &7OP/DEOP/PLAYERISCONNECTED/FIRSTJOIN

		Essentials-fbm-to-op: &7You have been successfully placed as a server operator !
		Essentials-fbm-to-deop: &7You have been removed operator from the server !

		Essentials-fbm-to-first-join: &c%{Essentials.nick.%player%}% &6joined the game for the first time !
		Essentials-fbm-to-join: &c%{Essentials.nick.%player%}% &6joined the game !

		# |-> MESSAGE COMMAND (CHAT) !

		Essentials-chat-none-argument: &cYou must use the right arguments ! ('clear')

		Essentials-chat-to-clear: &6You deleted the chat room !

		Essentials-chat-to-enable: &6You have &cactivated &6the Chat !
		Essentials-chat-to-disable: &6You have &cdeactivated &6the Chat !

		Essentials-chat-to-enable-to-already: &cYou have already activated the Chat !
		Essentials-chat-to-disable-to-already: &cYou have already deactivated the Chat !

		# |-> MESSAGE COMMAND (PVP) !

		Essentials-pvp-none-argument: &cYou must use the right arguments ! ('on' and 'off' or 'enable' and 'disable')

		Essentials-pvp-to-on: &7You have activated pvp !
		Essentials-pvp-to-off: &7You have deactivated pvp !

		Essentials-pvp-to-on-to-already: &cYou have already activated pvp !
		Essentials-pvp-to-off-to-already: &cYou have already deactivated pvp !

		# |-> MESSAGE COMMAND (BEDTELEPORT) !

		Essentials-bedteleport-to-me-if-bed-is-set: &7You have teleported to the your bed !
		Essentials-bedteleport-to-me-if-bed-is-not-set: &cYou don't have a bed !

		Essentials-bedteleport-to-player-admin-if-bed-is-set: &7You have teleported to the player's bed %{Essentials.nick.%arg 1%}% &7!
		Essentials-bedteleport-to-player-admin-if-bed-is-not-set: &cThere is no bed in relation to the player &c!

		Essentials-bedteleport-if-player-of-me: &cYou can't teleport yourself !

		# |-> MESSAGE COMMAND (RANDOMTELEPORT) !

		Essentials-randomteleport-cooldown: &7You will be teleported to &c%{Essentials-randomteleport-teleport-cooldown.variable}% &cseconds &7!
		Essentials-randomteleport-teleport: &7You have been randomly teleported !

		Essentials-randomteleport-if-teleport-is-set: &cYou can't teleport yourself every time !

		# |-> MESSAGE COMMAND (EDITSIGN) !

		Essentials-editsign-none-argument-one: &7You must put the line you want to change ! ('1', '2', '3' and '4')
		Essentials-editsign-none-argument-two: &cYou must put a text to be able to use this command !

		Essentials-editsign-to-block-targeted-is-not-sign: &cYou must target the panel you want to modify !

		Essentials-editsign-to-edit-line: &7You have successfully modified the row of the panel !

#  |->>> THE CODE OF ESSENTIALS SKRIPT <<<-|

on first join:
	set {Essentials.nick.%player%} to player
	stop

command /editsign [<text>] [<text>]:
	executable by: player and console
	aliases: essentials:editsign
	description: &fEssentials command /editsign !
	trigger:
		if sender is a player:
			if targeted block is not a sign:
				send "{@Essentials-editsign-to-block-targeted-is-not-sign}" to player
				stop
			else:
				if arg 1 is not set:
					send "{@Essentials-editsign-none-argument-one}" to player
					stop
				if arg 1 is not "1" or "2" or "3" or "4":
					send "{@Essentials-editsign-none-argument-one}" to player
					stop
				if arg 1 is "1":
					if arg 2 is not set:
						send "{@Essentials-editsign-none-argument-two}" to player
						stop
					if arg 2 is set:
						set line 1 of targeted block to colored arg 2
						send "{@Essentials-editsign-to-edit-line}" to player
						stop
				if arg 1 is "2":
					if arg 2 is not set:
						send "{@Essentials-editsign-none-argument-two}" to player
						stop
					if arg 2 is set:
						set line 2 of targeted block to colored arg 2
						send "{@Essentials-editsign-to-edit-line}" to player
						stop
				if arg 1 is "3":
					if arg 2 is not set:
						send "{@Essentials-editsign-none-argument-two}" to player
						stop
					if arg 2 is set:
						set line 3 of targeted block to colored arg 2
						send "{@Essentials-editsign-to-edit-line}" to player
						stop
				if arg 1 is "4":
					if arg 2 is not set:
						send "{@Essentials-editsign-none-argument-two}" to player
						stop
					if arg 2 is set:
						set line 4 of targeted block to colored arg 2
						send "{@Essentials-editsign-to-edit-line}" to player
						stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/editsign":
	if sender is a player:
		if player has permission "essentials.editsign" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:editsign":
	if sender is a player:
		if player has permission "essentials.editsign" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /randomteleport [<text>]:
	executable by: player and console
	aliases: essentials:randomteleport, essentials:randomtp, randomtp, rtp, essentials:rtp
	description: &fEssentials command /randomteleport !
	trigger:
		if sender is a player:
			if player has permission "essentials.randomteleport.bypass" or "essentials.*":
				if {Essentials.randomteleport.if.teleport.is.set.%player%} is not set:
					set {Essentials.back.use.%player%} to player's location
					wait 1 tick
					set {Essentials.randomtp.teleport.use} to location at random number between {@Essentials-randomteleport-to-x-coord-min} and {@Essentials-randomteleport-to-x-coord-max}, 100, random number between {@Essentials-randomteleport-to-z-coord-min} and {@Essentials-randomteleport-to-z-coord-max}
					teleport player to {Essentials.randomtp.teleport.use}
					send "{@Essentials-randomteleport-teleport}" to player
					set gamemode of player to creative
					set {Essentials.randomteleport.change.gamemode.%player%} to true
					set {Essentials.randomteleport.if.teleport.is.set.%player%} to true
					stop
				else:
					send "{@Essentials-randomteleport-if-teleport-is-set}" to player
					stop
			else:
				if {Essentials.randomteleport.if.teleport.is.set.%player%} is not set:
					if {@Essentials-randomteleport-use-cooldown} is true:
						set {Essentials.back.use.%player%} to player's location
						wait 1 tick
						set {Essentials.randomtp.teleport.use} to location at random number between {@Essentials-randomteleport-to-x-coord-min} and {@Essentials-randomteleport-to-x-coord-max}, 100, random number between {@Essentials-randomteleport-to-z-coord-min} and {@Essentials-randomteleport-to-z-coord-max}
						send "{@Essentials-randomteleport-cooldown}" to player
						wait {@Essentials-randomteleport-teleport-cooldown} seconds
						teleport player to {Essentials.randomtp.teleport.use}
						send "{@Essentials-randomteleport-teleport}" to player
						set gamemode of player to creative
						set {Essentials.randomteleport.change.gamemode.%player%} to true
						set {Essentials.randomteleport.if.teleport.is.set.%player%} to true
						stop
					else:
						set {Essentials.back.use.%player%} to player's location
						wait 1 tick
						set {Essentials.randomtp.teleport.use} to location at random number between {@Essentials-randomteleport-to-x-coord-min} and {@Essentials-randomteleport-to-x-coord-max}, 100, random number between {@Essentials-randomteleport-to-z-coord-min} and {@Essentials-randomteleport-to-z-coord-max}
						teleport player to {Essentials.randomtp.teleport.use}
						send "{@Essentials-randomteleport-teleport}" to player
						set gamemode of player to creative
						set {Essentials.randomteleport.change.gamemode.%player%} to true
						set {Essentials.randomteleport.if.teleport.is.set.%player%} to true
						stop
				else:
					send "{@Essentials-randomteleport-if-teleport-is-set}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/rtp":
	if sender is a player:
		if player has permission "essentials.randomteleport" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:rtp":
	if sender is a player:
		if player has permission "essentials.randomteleport" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/randomtp":
	if sender is a player:
		if player has permission "essentials.randomteleport" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:randomtp":
	if sender is a player:
		if player has permission "essentials.randomteleport" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/randomteleport":
	if sender is a player:
		if player has permission "essentials.randomteleport" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:randomteleport":
	if sender is a player:
		if player has permission "essentials.randomteleport" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on inventory click:
	if {Essentials.randomteleport.change.gamemode.%player%} is set:
		cancel event
		wait {@Essentials-randomteleport-to-teleport-change-gamemode-to-creative} seconds
		set gamemode of player to survival
		delete {Essentials.randomteleport.change.gamemode.%player%}
		delete {Essentials.randomteleport.if.teleport.is.set.%player%}
		stop
	else:
		stop

on any movement:
	if {Essentials.randomteleport.change.gamemode.%player%} is set:
		wait {@Essentials-randomteleport-to-teleport-change-gamemode-to-creative} seconds
		set gamemode of player to survival
		delete {Essentials.randomteleport.change.gamemode.%player%}
		delete {Essentials.randomteleport.if.teleport.is.set.%player%}
		stop
	else:
		stop

on join:
	delete {Essentials.randomteleport.change.gamemode.%player%}
	delete {Essentials.randomteleport.if.teleport.is.set.%player%}
	stop	

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.bedteleport" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Bedteleport":
				set line 1 of block to ""
				set line 2 of block to "&1[Bedteleport]"
				send "{@Essentials-sign-create}" to player
				stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.bedteleport" or "essentials.*":
		if line 2 of block is "&1[Bedteleport]":
			if bed of player exists:
				teleport player to bed of player
				send "{@Essentials-bedteleport-to-me-if-bed-is-set}" to player
				stop
			if bed of player is not set:
				send "{@Essentials-bedteleport-to-player-admin-if-bed-is-not-set}" to player
				stop
	else:
		stop

command /bedteleport [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:bedteleport, essentials:bt, bt
	description: &fEssentials command /bedteleport !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				if bed of player exists:
					teleport player to bed of player
					send "{@Essentials-bedteleport-to-me-if-bed-is-set}" to player
					stop
				if bed of player is not set:
					send "{@Essentials-bedteleport-to-player-admin-if-bed-is-not-set}" to player
					stop
			if arg 1 is set:
				if arg 1 is not "%player%":
					if player has permission "essentials.bedteleport.others" or "essentials.*":
						if bed of arg 1 exists:
							teleport player to bed of arg 1
							send "{@Essentials-bedteleport-to-player-admin-if-bed-is-set}" to player
							stop
						if bed of arg 1 is not set:
							send "{@Essentials-bedteleport-to-player-admin-if-bed-is-not-set}" to player
							stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
				else:
					if player has permission "essentials.bedteleport.others" or "essentials.*":
						send "{@Essentials-bedteleport-if-player-of-me}" to player
						stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/bedteleport":
	if sender is a player:
		if player has permission "essentials.bedteleport" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:bedteleport":
	if sender is a player:
		if player has permission "essentials.bedteleport" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/bt":
	if sender is a player:
		if player has permission "essentials.bedteleport" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:bt":
	if sender is a player:
		if player has permission "essentials.bedteleport" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.seed" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Seed":
				set line 1 of block to ""
				set line 2 of block to "&1[Seed]"
				send "{@Essentials-sign-create}" to player
				stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.seed" or "essentials.*":
		if line 2 of block is "&1[Seed]":
			send "{@Essentials-seed}" to player
			stop
	else:
		stop

command /pvp [<text>]:
	executable by: player and console
	aliases: essentials:pvp
	description: &fEssentials command /pvp !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-pvp-none-argument}" to player
				stop
			if arg 1 is not "enable" or "on" or "disable" or "off":
				send "{@Essentials-pvp-none-argument}" to player
				stop
			if arg 1 is "enable" or "on":
				if player has permission "essentials.pvp.*" or "essentials.pvp.enable" or "essentials.*":
					if {Essentials.pvp.enable} is not set:
						send "{@Essentials-pvp-to-on}" to player
						enable PvP in the event-world
						set {Essentials.pvp.enable} to true
						stop
					else:
						send "{@Essentials-pvp-to-on-to-already}" to player
						stop
				else:
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
			if arg 1 is "disable" or "off":
				if player has permission "essentials.pvp.*" or "essentials.pvp.disable" or "essentials.*":
					if {Essentials.pvp.enable} is true:
						send "{@Essentials-pvp-to-off}" to player
						disable PvP in the event-world
						delete {Essentials.pvp.enable}
						stop
					if {Essentials.pvp.enable} is not set:
						send "{@Essentials-pvp-to-off-to-already}" to player
						stop
				else:
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/pvp":
	if sender is a player:
		if player has permission "essentials.pvp" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:pvp":
	if sender is a player:
		if player has permission "essentials.pvp" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.motd" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Motd":
				set line 1 of block to ""
				set line 2 of block to "&1[Motd]"
				send "{@Essentials-sign-create}" to player
				stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.motd" or "essentials.*":
		if line 2 of block is "&1[Motd]":
			send "{@Essentials-motd}" to player
			stop
	else:
		stop

command /chat [<text>]:
	executable by: player and console
	aliases: essentials:chat
	description: &fEssentials command /chat !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-chat-none-argument}" to player
				stop
			if arg 1 is not "clear" or "on" or "off" or "enable" or "disable":
				send "{@Essentials-chat-none-argument}" to player
				stop
			if arg 1 is "clear":
				if player has permission "essentials.chat.*" or "essentials.chat.clear" or "essentials.*":
					loop 300 times:
						broadcast ""
					broadcast "{@Essentials-chat-to-clear}"
					stop
				else:
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
			if arg 1 is "off" or "disable":
				if player has permission "essentials.chat.*" or "essentials.chat.disable" or "essentials.*":
					if {Essentials.chat.use} is not set:
						set {Essentials.chat.use} to true
						broadcast "{@Essentials-chat-to-disable}"
						stop
					else:
						send "{@Essentials-chat-to-disable-to-already}" to player
						stop
				else:
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
			if arg 1 is "on" or "enable":
				if player has permission "essentials.chat.*" or "essentials.chat.enable" or "essentials.*":
					if {Essentials.chat.use} is set:
						delete {Essentials.chat.use}
						broadcast "{@Essentials-chat-to-enable}"
						stop
					else:
						send "{@Essentials-chat-to-enable-to-already}" to player
						stop
				else:
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-chat-none-argument}" to console
				stop
			if arg 1 is not "clear" or "on" or "off" or "enable" or "disable":
				send "{@Essentials-chat-none-argument}" to console
				stop
			if arg 1 is "clear":
				loop 300 times:
					broadcast ""
				broadcast "{@Essentials-chat-to-clear}"
				stop
			if arg 1 is "off" or "disable":
				if {Essentials.chat.use} is not set:
					set {Essentials.chat.use} to true
					broadcast "{@Essentials-chat-to-disable}"
					stop
				else:
					send "{@Essentials-chat-to-disable-to-already}" to console
					stop
			if arg 1 is "on" or "enable":
				if {Essentials.chat.use} is set:
					delete {Essentials.chat.use}
					broadcast "{@Essentials-chat-to-enable}"
					stop
				else:
					send "{@Essentials-chat-to-enable-to-already}" to console
					stop

on command "/chat":
	if sender is a player:
		if player has permission "essentials.chat" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:chat":
	if sender is a player:
		if player has permission "essentials.chat" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /fakebroadcastmessage [<text>] [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:fakebroadcastmessage, essentials:fbm, fbm
	description: &fEssentials command /fakebroadcastmessage !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-fbm-none-argument-one}" to player
				stop
			if arg 1 is not "list" or "op" or "deop" or "playerisconnected" or "firstjoin":
				send "{@Essentials-fbm-none-argument-one}" to player
				stop
			if arg 1 is "list":
				if arg 2 is not set:
					if player has permission "essentials.fakebroadcastmessage.*" or "essentials.fakebroadcastmessage.list" or "essentials.*":
						send "{@Essentials-fbm-list}" to player
						stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
				if arg 2 is set:
					if player has permission "essentials.fakebroadcastmessage.*" or "essentials.fakebroadcastmessage.list" or "essentials.*":
						send "{@Essentials-fbm-none-argument-one}" to player
						stop
					if sender doesn't have permission "essentials.fakebroadcastmessage.*" or "essentials.fakebroadcastmessage.list" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
			if arg 1 is "op":
				if arg 2 is not set:
					if player has permission "essentials.fakebroadcastmessage.*" or "essentials.fakebroadcastmessage.fakes.op" or "essentials.fakebroadcastmessage.fakes.*" or "essentials.*":
						send "{@Essentials-fbm-none-argument-two}" to player
						stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
				if arg 2 is online:
					if player has permission "essentials.fakebroadcastmessage.*" or "essentials.fakebroadcastmessage.fakes.op" or "essentials.fakebroadcastmessage.fakes.*" or "essentials.*":
						broadcast "{@Essentials-fbm-to-op}"
						stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
				if arg 2 is offline:
					if player has permission "essentials.fakebroadcastmessage.*" or "essentials.fakebroadcastmessage.fakes.op" or "essentials.fakebroadcastmessage.fakes.*" or "essentials.*":
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
			if arg 1 is "deop":
				if arg 2 is not set:
					if player has permission "essentials.fakebroadcastmessage.*" or "essentials.fakebroadcastmessage.fakes.deop" or "essentials.fakebroadcastmessage.fakes.*" or "essentials.*":
						send "{@Essentials-fbm-none-argument-two}" to player
						stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
				if arg 2 is online:
					if player has permission "essentials.fakebroadcastmessage.*" or "essentials.fakebroadcastmessage.fakes.deop" or "essentials.fakebroadcastmessage.fakes.*" or "essentials.*":
						broadcast "{@Essentials-fbm-to-deop}"
						stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
				if arg 2 is offline:
					if player has permission "essentials.fakebroadcastmessage.*" or "essentials.fakebroadcastmessage.fakes.deop" or "essentials.fakebroadcastmessage.fakes.*" or "essentials.*":
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
			if arg 1 is "playerisconnected":
				if arg 2 is not set:
					if player has permission "essentials.fakebroadcastmessage.*" or "essentials.fakebroadcastmessage.playerisconnected" or "essentials.*":
						send "{@Essentials-fbm-none-argument-two}" to player
						stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
				if arg 2 is online:
					if player has permission "essentials.fakebroadcastmessage.*" or "essentials.fakebroadcastmessage.fakes.playerisconnected" or "essentials.fakebroadcastmessage.fakes.*" or "essentials.*":
						broadcast "{@Essentials-fbm-to-join}"
						stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
				if arg 2 is offline:
					if player has permission "essentials.fakebroadcastmessage.*" or "essentials.fakebroadcastmessage.fakes.playerisconnected" or "essentials.fakebroadcastmessage.fakes.*" or "essentials.*":
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
			if arg 1 is "firstjoin":
				if arg 2 is not set:
					if player has permission "essentials.fakebroadcastmessage.*" or "essentials.fakebroadcastmessage.fakes.firstjoin" or "essentials.fakebroadcastmessage.fakes.*" or "essentials.*":
						send "{@Essentials-fbm-none-argument-two}" to player
						stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
				if arg 2 is online:
					if player has permission "essentials.fakebroadcastmessage.*" or "essentials.fakebroadcastmessage.fakes.firstjoin" or "essentials.fakebroadcastmessage.fakes.*" or "essentials.*":
						broadcast "{@Essentials-fbm-to-first-join}"
						stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
				if arg 2 is offline:
					if player has permission "essentials.fakebroadcastmessage.*" or "essentials.fakebroadcastmessage.fakes.firstjoin" or "essentials.fakebroadcastmessage.fakes.*" or "essentials.*":
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop

on command "/fakebroadcastmessage":
	if sender is a player:
		if player has permission "essentials.fakebroadcastmessage" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:fakebroadcastmessage":
	if sender is a player:
		if player has permission "essentials.fakebroadcastmessage" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/fbm":
	if sender is a player:
		if player has permission "essentials.fakebroadcastmessage" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:fbm":
	if sender is a player:
		if player has permission "essentials.fakebroadcastmessage" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.fly" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Fly":
				set line 1 of block to ""
				set line 2 of block to "&1[Fly]"
				send "{@Essentials-sign-create}" to player
				stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.fly" or "essentials.*":
		if line 2 of block is "&1[Fly]":
			if {Essentials.fly.%player%} is not set:
				send "{@Essentials-fly-fly-to-me-is-on}" to player
				set player's flight mode to true
				set {Essentials.fly.%player%} to true
				stop
			if {Essentials.fly.%player%} is set:
				send "{@Essentials-fly-fly-to-me-is-off}" to player
				set player's flight mode to false
				delete {Essentials.fly.%player%}
				stop
	else:
		stop

command /chunkslime [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:chunkslime
	description: &fEssentials command /chunkslime !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				if chunk at player is a slime chunk:
					send "{@Essentials-chunkslime-to-me-to-chunk-slime}" to player
					stop
				if chunk at player is not a slime chunk:
					send "{@Essentials-chunkslime-to-me-to-no-chunk-slime}" to player
					stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					if player has permission "essentials.chunkslime.others" or "essentials.*":
						if chunk at arg 1 is a slime chunk:
							send "{@Essentials-chunkslime-to-player-admin-to-chunk-slime}" to player
							stop
						if chunk at arg 1 is not a slime chunk:
							send "{@Essentials-chunkslime-to-player-admin-to-no-chunk-slime}" to player
							stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
				else:
					if player has permission "essentials.chunkslime.others" or "essentials.*":
						send "{@Essentials-chunkslime-if-player-of-me}" to player
						stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
			if arg 1 is offline:
				if player has permission "essentials.chunkslime.others" or "essentials.*":
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
				else:
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/chunkslime":
	if sender is a player:
		if player has permission "essentials.chunkslime" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:chunkslime":
	if sender is a player:
		if player has permission "essentials.chunkslime" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /seed [<text>]:
	executable by: player and console
	aliases: essentials:seed
	description: &fEssentials command /seed !
	trigger:
		if sender is a player:
			send "{@Essentials-seed}" to player
			stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/seed":
	if sender is a player:
		if player has permission "essentials.seed" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:seed":
	if sender is a player:
		if player has permission "essentials.seed" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on server list ping:
	set the motd to "{@Essentials-motd-to-server}"
	stop

command /thor [<text>]:
	executable by: player and console
	aliases: essentials:thor
	description: &fEssentials command /thor !
	trigger:
		if sender is a player:
			send "{@Essentials-thor}" to player
			strike lightning at the targeted block
			stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/thor":
	if sender is a player:
		if player has permission "essentials.thor" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:thor":
	if sender is a player:
		if player has permission "essentials.thor" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on rightclick with fishing rod:
	if player has permission "essentials.grapple" or "essentials.*":
		if {Essentials.grapple.%player%} is not set:
			set {Essentials.grapple.%player%} to true
			stop
		else:
			teleport player to target block
			delete {Essentials.grapple.%player%}
			stop
	else:
		stop

on world init:
	send "{@Essentials-world-to-create}" to console
	stop

command /motd [<text>]:
	executable by: player and console
	aliases: essentials:motd
	description: &fEssentials command /motd !
	trigger:
		if sender is a player:
			send "{@Essentials-motd}" to player
			stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/motd":
	if sender is a player:
		if player has permission "essentials.motd" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:motd":
	if sender is a player:
		if player has permission "essentials.motd" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on death:
	if {@Essentials-death-to-remove-to-money-use} is true:
		remove {@Essentials-death-to-remove-to-money} from {money.%UUID of player%}
		stop
	else:
		stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.homes" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "List":
				set line 1 of block to ""
				set line 2 of block to "&1[List]"
				send "{@Essentials-sign-create}" to player
				stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.homes" or "essentials.*":
		if line 2 of block is "&1[list]":
			send "{@Essentials-list}" to player
			stop
	else:
		stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.homes" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Homes":
				set line 1 of block to ""
				set line 2 of block to "&1[Homes]"
				send "{@Essentials-sign-create}" to player
				stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.homes" or "essentials.*":
		if line 2 of block is "&1[homes]":
			if {Essentials.warp.list::*} is not set:
				send "{@Essentials-homes-no-home-list}" to player
				stop
			else:
				send "{@Essentials-homes-list}" to player
				stop
	else:
		stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.warps" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Warps":
				set line 1 of block to ""
				set line 2 of block to "&1[Warps]"
				send "{@Essentials-sign-create}" to player
				stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.warps" or "essentials.*":
		if line 2 of block is "&1[warps]":
			if {Essentials.warp.list::*} is not set:
				send "{@Essentials-warps-no-warp-list}" to player
				stop
			else:
				send "{@Essentials-warps-list}" to player
				stop
	else:
		stop

command /maintenance [<text>]:
	executable by: player and console
	aliases: essentials:maintenance
	description: &fEssentials command /maintenance !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-maintenance-none-argument}" to player
				stop
			if arg 1 is not "enable" or "disable" or "on" or "off":
				send "{@Essentials-maintenance-none-argument}" to player
				stop
			if arg 1 is "enable" or "on":
				if player has permission "essentials.maintenance.enable" or "essentials.maintenance.*" or "essentials.*":
					if {Essentials.maintenance.enable} is false:
						broadcast "{@Essentials-maintenance-to-enable}"
						set {Essentials.maintenance.enable} to true
						wait {@Essentials-maintenance-cooldown} seconds
						kick players due to "{@Essentials-maintenance-reason-kick}"
						stop
					if {Essentials.maintenance.enable} is true:
						send "{@Essentials-maintenance-to-enable-to-already}"
						stop
				else:
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
			if arg 1 is "disable" or "off":
				if player has permission "essentials.maintenance.disable" or "essentials.maintenance.*" or "essentials.*":
					if {Essentials.maintenance.enable} is true:
						set {Essentials.maintenance.enable} to false
						send "{@Essentials-maintenance-to-disable}" to player
						stop
					if {Essentials.maintenance.enable} is false:
						send "{@Essentials-maintenance-to-disable-to-already}"
						stop
				else:
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/maintenance":
	if sender is a player:
		if player has permission "essentials.maintenance" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:maintenance":
	if sender is a player:
		if player has permission "essentials.maintenance" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on connect:
	if {Essentials.maintenance.enable} is true:
		if player doesn't have permission "essentials.maintenance.bypass" or "essentials.maintenance.*" or "essentials.*":
			kick player due to "{@Essentials-maintenance-reason-kick}"
		else:
			stop
	else:
		stop

on load:
	if {Essentials.maintenance.enable} is not set:
		set {Essentials.maintenance.enable} to true
		stop
	else:
		stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.serverbungeecord" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Bungeecord":
				set line 1 of block to ""
				set line 2 of block to "&1[Server]"
				set line 3 of block to line 3
				send "{@Essentials-sign-create}" to player
				stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.serverbungeecord" or "essentials.*":
		if line 2 of block is "&1[Server]":
			if line 3 of block is line 3:
				connect player to line 3 of block
				stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.life1" or "essentials.*":
			replace all "{life1}" in message with "❤"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.life2" or "essentials.*":
			replace all "{life2}" in message with "♥"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.life3" or "essentials.*":
			replace all "{life3}" in message with "❥"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.correct" or "essentials.*":
			replace all "{correct}" in message with "✔"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.incorrect1" or "essentials.*":
			replace all "{incorrect1}" in message with "✘"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.incorrect2" or "essentials.*":
			replace all "{incorrect2}" in message with "✗"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.incorrect3" or "essentials.*":
			replace all "{incorrect3}" in message with "✕"
			stop
		else:
			stop
	else:
		stop


on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.plane" or "essentials.*":
			replace all "{plane}" in message with "✈"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.music1" or "essentials.*":
			replace all "{music1}" in message with "♪"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.music2" or "essentials.*":
			replace all "{music2}" in message with "♫"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.king1" or "essentials.*":
			replace all "{king1}" in message with "♛"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.king2" or "essentials.*":
			replace all "{king2}" in message with "♕"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.king3" or "essentials.*":
			replace all "{king3}" in message with "♚"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.phone" or "essentials.*":
			replace all "{phone}" in message with "☎"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.star1" or "essentials.*":
			replace all "{star1}" in message with "★"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.star2" or "essentials.*":
			replace all "{star2}" in message with "☆"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.star3" or "essentials.*":
			replace all "{star3}" in message with "✮"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.sun1" or "essentials.*":
			replace all "{sun1}" in message with "☼"
			stop
		else:
			stop
	else:
		stop

on chat:
	if {@Essentials-emoticon-use} is true:
		if player has permission "essentials.emoticon.*" or "essentials.emoticon.sun2" or "essentials.*":
			replace all "{sun2}" in message with "☀"
			stop
		else:
			stop
	else:
		stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.workbench" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Workbench":
				set line 1 of block to ""
				set line 2 of block to "&1[Workbench]"
				send "{@Essentials-sign-create}" to player
				stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.workbench" or "essentials.*":
		if line 2 of block is "&1[Workbench]":
			open workbench inventory to the player
			send "{@Essentials-workbench}" to player
			stop
	else:
		stop

command /weather [<text>]:
	executable by: player and console
	aliases: essentials:weather, essentials:toggledownfall, toggledownfall
	description: &fEssentials command /deop !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-weather-none-argument}" to player
				stop
			if arg 1 is not "sun" or "clear" or "thunder" or "rain":
				send "{@Essentials-weather-none-argument}" to player
				stop
			if arg 1 is "clear":
				if player has permission "essentials.weather.*" or "essentials.weather.clear" or "essentials.*":
					set weather to sunny
					send "{@Essentials-weather-clear-to-world}" to player
					stop
				else:
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
			if arg 1 is "sun":
				if player has permission "essentials.weather.*" or "essentials.weather.sun" or "essentials.*":
					set weather to sunny
					send "{@Essentials-weather-sun-to-world}" to player
					stop
				else:
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
			if arg 1 is "rain":
				if player has permission "essentials.weather.*" or "essentials.weather.rain" or "essentials.*":
					set weather to rain
					send "{@Essentials-weather-rain-to-world}" to player
					stop
				else:
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
			if arg 1 is "thunder":
				if player has permission "essentials.weather.*" or "essentials.weather.thunder" or "essentials.*":
					set weather to thunder
					send "{@Essentials-weather-thunder-to-world}" to player
					stop
				else:
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/weather":
	if sender is a player:
		if player has permission "essentials.weather" or "essentials.weather.*" or "essentials.*" :
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:weather":
	if sender is a player:
		if player has permission "essentials.weather" or "essentials.weather.*" or "essentials.*" :
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on weather change to rain:
	if {@Essentials-weather-rain} is false:
		cancel event
		stop
	else:
		stop

on weather change to thunder:
	if {@Essentials-weather-thunder} is false:
		cancel event
		stop
	else:
		stop

command /deop [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:deop, deoperator, essentials:deoperator
	description: &fEssentials command /deop !
	trigger:
		if sender is a player:
			if {Essentials.op.%arg 1%} is true:
				if arg 1 is not set:
					send "{@Essentials-deop-none-argument}" to player
					stop
				if arg 1 is set:
					send "{@Essentials-deop-to-player-admin}" to player
					send "{@Essentials-deop-to-player}" to arg 1
					delete {Essentials.op.%arg 1%}
					deop the arg 1
					stop
			else:
				if arg 1 is not set:
					send "{@Essentials-deop-none-argument}" to player
					stop
				if arg 1 is set:
					send "{@Essentials-deop-if-player-is-already-deop}" to player
					stop
		if sender is console:
			if {Essentials.op.%arg 1%} is true:
				if arg 1 is not set:
					send "{@Essentials-deop-none-argument}" to console
					stop
				if arg 1 is set:
					send "{@Essentials-deop-to-player-admin}" to console
					send "{@Essentials-deop-to-player}" to arg 1
					delete {Essentials.op.%arg 1%}
					deop the arg 1
					stop
			else:
				if arg 1 is not set:
					send "{@Essentials-deop-none-argument}" to console
					stop
				if arg 1 is set:
					send "{@Essentials-deop-if-player-is-already-deop}" to console
					stop

on command "/deop":
	if sender is a player:
		if player has permission "essentials.deop" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:deop":
	if sender is a player:
		if player has permission "essentials.deop" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/deoperator":
	if sender is a player:
		if player has permission "essentials.deop" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:deoperator":
	if sender is a player:
		if player has permission "essentials.deop" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /op [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:op, operator, essentials:operator
	description: &fEssentials command /op !
	trigger:
		if sender is a player:
			if {Essentials.op.%arg 1%} is not set:
				if arg 1 is not set:
					send "{@Essentials-op-none-argument}" to player
					stop
				if arg 1 is set:
					send "{@Essentials-op-to-player-admin}" to player
					send "{@Essentials-op-to-player}" to arg 1
					set {Essentials.op.%arg 1%} to true
					op the arg 1
					stop
			else:
				if arg 1 is not set:
					send "{@Essentials-op-none-argument}" to player
					stop
				if arg 1 is set:
					send "{@Essentials-op-if-player-is-already-op}" to player
					stop
		if sender is console:
			if {Essentials.op.%arg 1%} is not set:
				if arg 1 is not set:
					send "{@Essentials-op-none-argument}" to console
					stop
				if arg 1 is set:
					send "{@Essentials-op-to-player-admin}" to console
					send "{@Essentials-op-to-player}" to arg 1
					set {Essentials.op.%arg 1%} to true
					op the arg 1
					stop
			else:
				if arg 1 is not set:
					send "{@Essentials-op-none-argument}" to console
					stop
				if arg 1 is set:
					send "{@Essentials-op-if-player-is-already-op}" to console
					stop

on command "/op":
	if sender is a player:
		if player has permission "essentials.op" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:op":
	if sender is a player:
		if player has permission "essentials.op" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/operator":
	if sender is a player:
		if player has permission "essentials.op" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:operator":
	if sender is a player:
		if player has permission "essentials.op" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop


command /hat [<text>] [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:hat
	description: &fEssentials command /hat !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				if tool is air:
					send "{@Essentials-hat-to-me-to-hat-is-air}" to player
					stop
				if tool is not air:
					set player's helmet to player's tool
					send "{@Essentials-hat-to-me}" to player
					stop
			if arg 1 is "off":
				if arg 2 is not set:
					set player's helmet to air
					send "{@Essentials-hat-to-me-if-hat-is-set}" to player
					stop
				if arg 2 is online:
					if arg 2 is not "%player%":
						if player has permission "essentials.hat.others" or "essentials.*":
							set arg 2's helmet to air
							send "{@Essentials-hat-to-player-to-off}" to arg 2
							send "{@Essentials-hat-to-player-admin-to-off}" to player
							stop
						else:
							send "{@Essentials-player-has-not-permission-use-commands}" to player
							stop
					else:
						if player doesn't have permission "essentials.hat.others" or "essentials.*":
							send "{@Essentials-player-has-not-permission-use-commands}" to player
							stop
						else:
							send "{@Essentials-hat-if-player-of-me}" to player
							stop
				if arg 2 is offline:
					if player doesn't have permission "essentials.hat.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
			if arg 1 is not "off":
				if arg 2 is not set:
					set player's helmet to player's tool
					send "{@Essentials-hat-to-me}" to player
					stop
				if arg 2 is online:
					if arg 2 is not "%player%":
						if player doesn't have permission "essentials.hat.others" or "essentials.*":
							send "{@Essentials-player-has-not-permission-use-commands}" to player
							stop
						else:
							set arg 2's helmet to player's tool
							send "{@Essentials-hat-to-player}" to arg 2
							send "{@Essentials-hat-to-player-admin}" to player
							stop
					if arg 2 is "%player%":
						if player doesn't have permission "essentials.hat.others" or "essentials.*":
							send "{@Essentials-player-has-not-permission-use-commands}" to player
							stop
						else:
							send "{@Essentials-hat-if-player-of-me}" to player
							stop
				if arg 2 is offline:
					if player doesn't have permission "essentials.hat.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/hat":
	if sender is a player:
		if player has permission "essentials.hat" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:hat":
	if sender is a player:
		if player has permission "essentials.hat" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /vanish [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:vanish
	description: &fEssentials command /vanish !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				if {Essentials.vanish.%player%} is not set:
					hide the player from all players
					send "{@Essentials-vanish-to-me-to-on}"
					set {Essentials.vanish.%player%} to true
					stop
				else:
					reveal the player from all players
					send "{@Essentials-vanish-to-me-to-off}"
					delete {Essentials.vanish.%player%}
					stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					if player has permission "essentials.vanish.others" or "essentials.*":
						if {Essentials.vanish.%arg 1%} is not set:
							hide the arg 1 from all players
							send "{@Essentials-vanish-to-player-to-on}" to arg 1
							send "{@Essentials-vanish-to-player-admin-to-on}" to player
							set {Essentials.vanish.%arg 1%} to true
							stop
						else:
							reveal the arg 1 from all players
							stop
							send "{@Essentials-vanish-to-player-to-off}" to arg 1
							send "{@Essentials-vanish-to-player-admin-to-off}" to player
							delete {Essentials.vanish.%arg 1%}
							stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
				else:
					if player doesn't have permission "essentials.vanish.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-vanish-if-player-of-me}" to player
						stop
			if arg 1 is offline:
				if player doesn't have permission "essentials.vanish.others" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/vanish":
	if sender is a player:
		if player has permission "essentials.vanish" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:vanish":
	if sender is a player:
		if player has permission "essentials.vanish" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on drop:
	if player has permission "essentials.drop" or "essentials.*":
		stop
	else:
		cancel event
		send "{Essentials-no-drop}" to player
		stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.night" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Night":
				set line 1 of block to ""
				set line 2 of block to "&1[Night]"
				send "{@Essentials-sign-create}" to player
				stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.night" or "essentials.*":
		if line 2 of block is "&1[Night]":
			set time to 20:00
			send "{@Essentials-night}" to player
			stop
	else:
		stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.day" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Day":
				set line 1 of block to ""
				set line 2 of block to "&1[Day]"
				send "{@Essentials-sign-create}" to player
				stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.day" or "essentials.*":
		if line 2 of block is "&1[Day]":
			set time to 6:00
			send "{@Essentials-day}" to player
			stop
	else:
		stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.balance" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Balance":
				set line 1 of block to ""
				set line 2 of block to "&1[Balance]"
				send "{@Essentials-sign-create}" to player
				stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.balance" or "essentials.*":
		if line 2 of block is "&1[Balance]":
			if {Essentials.money.%player%} is not set:
				send "{@Essentials-money-if-money-is-not-set}" to player
				stop
			else:
				send "{@Essentials-money-to-me}" to player
				stop
	else:
		stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.heal" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Heal":
				set line 1 of block to ""
				set line 2 of block to "&1[Heal]"
				send "{@Essentials-sign-create}" to player
				stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.heal" or "essentials.*":
		if line 2 of block is "&1[Heal]":
			send "{@Essentials-heal-heal-to-me}" to player
			heal player
			stop
	else:
		stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.feed" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Feed":
				set line 1 of block to ""
				set line 2 of block to "&1[Feed]"
				send "{@Essentials-sign-create}" to player
				stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.feed" or "essentials.*":
		if line 2 of block is "&1[Feed]":
			send "{@Essentials-feed-feed-to-me}" to player
			set hunger bar to 10
			stop
	else:
		stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.trash" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Trash":
				set line 1 of block to ""
				set line 2 of block to "&1[Trash]"
				send "{@Essentials-sign-create}" to player
				stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.trash" or "essentials.*":
		if line 2 of block is "&1[Trash]":
			wait 2 ticks
			open chest with {@Essentials-trash-numbers-slot} rows named "{@Essentials-trash-named}" to player
			send "{@Essentials-trash}" to player
			stop
	else:
		stop

command /trash [<text>]:
	executable by: player and console
	aliases: essentials:trash, essentials:bin, bin
	description: &fEssentials command /trash !
	trigger:
		if sender is a player:
			wait 2 ticks
			open chest with {@Essentials-trash-numbers-slot} rows named "{@Essentials-trash-named}" to player
			send "{@Essentials-trash}" to player
			stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/trash":
	if sender is a player:
		if player has permission "essentials.trash" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:trash":
	if sender is a player:
		if player has permission "essentials.trash" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/bin":
	if sender is a player:
		if player has permission "essentials.trash" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:bin":
	if sender is a player:
		if player has permission "essentials.trash" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /kit [<text>]:
	executable by: player and console
	aliases: essentials:kit
	description: &fEssentials command /kit !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-kit-none-arguments}" to player
				stop
			if arg 1 is set:
				if player has permission "essentials.kit.%arg 1%" or "essentials.*":
					if player has permission "essentials.kit.bypass" or "essentials.*":
						if {Essentials.kit::%arg 1%} is set:
							set {Essentials.kit.count} to 0
							loop 36 times:
								set slot {Essentials.kit.count} of player's inventory to {Essentials.inv.%{Essentials.kit.count}%.%arg 1%}
								add 1 to {Essentials.kit.count}
								set the player's helmet to {Essentials.kit.helmet.%arg 1%}
								set the player's chestplate to {Essentials.kit.chestplate.%arg 1%}
								set the player's leggings to {Essentials.kit.legs.%arg 1%}
								set the player's boots to {Essentials.kit.boot.%arg 1%}
							send "{@Essentials-kit-give}" to player
							stop
						else:
							send "{@Essentials-kit-if-kit-is-not-set}" to player
							stop
					else:
						if {@Essentials-use-kit-cooldown} is true:
							if {Essentials.kit::%arg 1%} is set:
								set {Essentials.kit.count} to 0
								loop 36 times:
									send "{@Essentials-kit-give-player-coodown}" to player
									wait {@Essentials-give-kit-cooldown} seconds
									set slot {Essentials.kit.count} of player's inventory to {Essentials.inv.%{Essentials.kit.count}%.%arg 1%}
									add 1 to {Essentials.kit.count}
									set the player's helmet to {Essentials.kit.helmet.%arg 1%}
									set the player's chestplate to {Essentials.kit.chestplate.%arg 1%}
									set the player's leggings to {Essentials.kit.legs.%arg 1%}
									set the player's boots to {Essentials.kit.boot.%arg 1%}
								send "{@Essentials-kit-give}" to player
								stop
							else:
								send "{@Essentials-kit-if-kit-is-not-set}" to player
								stop
						else:
							if {Essentials.kit::%arg 1%} is set:
								set {Essentials.kit.count} to 0
								loop 36 times:
									set slot {Essentials.kit.count} of player's inventory to {Essentials.inv.%{Essentials.kit.count}%.%arg 1%}
									add 1 to {Essentials.kit.count}
									set the player's helmet to {Essentials.kit.helmet.%arg 1%}
									set the player's chestplate to {Essentials.kit.chestplate.%arg 1%}
									set the player's leggings to {Essentials.kit.legs.%arg 1%}
									set the player's boots to {Essentials.kit.boot.%arg 1%}
								send "{@Essentials-kit-give}" to player
								stop
							else:
								send "{@Essentials-kit-if-kit-is-not-set}" to player
								stop
				else:
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/kit":
	if sender is a player:
		if player has permission "essentials.kit" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:kit":
	if sender is a player:
		if player has permission "essentials.kit" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /deletekit [<text>]:
	executable by: player and console
	aliases: essentials:deletekit, essentials:delkit, delkit
	description: &fEssentials command /deletekit !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-delkit-none-arguments}" to player
				stop
			if arg 1 is set:
				if {Essentials.kit::%arg 1%} is set:
					delete {Essentials.kit::%arg 1%}
					delete {Essentials.inv.%{Essentials.kit.count}%.%arg 1%}
					delete {Essentials.kit.helmet.%arg 1%}
					delete {Essentials.kit.chestplate.%arg 1%}
					delete {Essentials.kit.legs.%arg 1%}
					delete {Essentials.kit.boot.%arg 1%}
					send "{@Essentials-delkit-delete}" to player
					stop
				else:
					send "{@Essentials-delkit-if-kit-is-not-set}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/delkit":
	if sender is a player:
		if player has permission "essentials.deletekit" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:delkit":
	if sender is a player:
		if player has permission "essentials.deletekit" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/deletekit":
	if sender is a player:
		if player has permission "essentials.deletekit" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:deletekit":
	if sender is a player:
		if player has permission "essentials.deletekit" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /createkit [<text>]:
	executable by: player and console
	aliases: essentials:createkit, essentials:setkit, setkit
	description: &fEssentials command /createkit !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-setkit-none-arguments}" to player
				stop
			if arg 1 is set:
				if {Essentials.kit::%arg 1%} is not set:
					set {Essentials.kit.count} to 0
					loop 36 times:
						set {Essentials.inv.%{Essentials.kit.count}%.%arg 1%} to slot {Essentials.kit.count} of player's inventory
						add 1 to {Essentials.kit.count}
						set {Essentials.kit.helmet.%arg 1%} to the player's helmet
						set {Essentials.kit.chestplate.%arg 1%} to the player's chestplate
						set {Essentials.kit.legs.%arg 1%} to the player's legs
						set {Essentials.kit.boot.%arg 1%} to the player's boot
					send "{@Essentials-setkit-create}" to player
					set {Essentials.kit::%arg 1%} to arg 1
					stop
				else:
					send "{@Essentials-setkit-if-kit-is-set}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/setkit":
	if sender is a player:
		if player has permission "essentials.createkit" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:setkit":
	if sender is a player:
		if player has permission "essentials.createkit" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/createkit":
	if sender is a player:
		if player has permission "essentials.createkit" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:createkit":
	if sender is a player:
		if player has permission "essentials.createkit" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /kits [<text>]:
	executable by: player and console
	aliases: essentials:kit
	description: &fEssentials command /kit !
	trigger:
		if sender is a player:
			if {Essentials.kit::*} is set:
				send "{@Essentials-kits}" to player
				stop
			else:
				send "{@Essentials-kits-no-kit}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/kits":
	if sender is a player:
		if player has permission "essentials.kits" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:kits":
	if sender is a player:
		if player has permission "essentials.kits" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /powertool [<text>]:
	executable by: player and console
	aliases: essentials:powertool
	description: &fEssentials command /powertool !
	trigger:		
		if sender is a player:
			if arg 1 is not set:
				clear {Essentials.powertool.%player%::%player's tool%}
				set {Essentials.powertool.tool.use} to player's tool
				set tool of player to 1 of player's tool
				send "{@Essentials-powertool-remove}" to player
				set player's tool to {Essentials.powertool.tool.use}
				stop
			if arg 1 is set:
				set {Essentials.powertool.%player%::%player's tool%} to arg 1
				send "{@Essentials-powertool-create}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on click:
	if {Essentials.powertool.%player%::%player's tool%} is set:
		cancel event
		make player execute command "%{Essentials.powertool.%player%::%player's tool%}%"
		stop

on command "/powertool":
	if sender is a player:
		if player has permission "essentials.powertool" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:powertool":
	if sender is a player:
		if player has permission "essentials.powertool" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /repair [<text>]:
	executable by: player and console
	aliases: essentials:repair
	description: &fEssentials command /repair !
	trigger:
		if sender is a player:
			if arg 1 is not "all":
				if player's tool is air:
					send "{@Essentials-repair-if-tool-is-air}" to player
					stop
				else:
					repair player's tool
					send "{@Essentials-repair}" to player
					stop
			if arg 1 is not set:
				if player's tool is air:
					send "{@Essentials-repair-if-tool-is-air}" to player
					stop
				else:
					repair player's tool
					send "{@Essentials-repair}" to player
					stop
			if arg 1 is "all":
				send "{@Essentials-repair-all}" to player
				repair slot 0 of player
				repair slot 1 of player
				repair slot 2 of player
				repair slot 3 of player
				repair slot 4 of player
				repair slot 5 of player
				repair slot 6 of player
				repair slot 7 of player
				repair slot 8 of player
				repair slot 9 of player
				repair slot 10 of player
				repair slot 11 of player
				repair slot 12 of player
				repair slot 13 of player
				repair slot 14 of player
				repair slot 15 of player
				repair slot 16 of player
				repair slot 17 of player
				repair slot 18 of player
				repair slot 19 of player
				repair slot 20 of player
				repair slot 21 of player
				repair slot 22 of player
				repair slot 23 of player
				repair slot 24 of player
				repair slot 25 of player
				repair slot 26 of player
				repair slot 27 of player
				repair slot 28 of player
				repair slot 29 of player
				repair slot 30 of player
				repair slot 31 of player
				repair slot 32 of player
				repair slot 33 of player
				repair slot 34 of player
				repair slot 35 of player
				repair helmet slot of player		
				repair chestplate slot of player
				repair leggings slot of player
				repair boots slot of player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/repair":
	if sender is a player:
		if player has permission "essentials.repair" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:repair":
	if sender is a player:
		if player has permission "essentials.repair" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /spawnmob [<entity types>] [<number>] [<text>]:
	executable by: player and console
	aliases: essentials:spawnmob
	description: &fEssentials command /spawnmob !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-spawnmob-none-argument-one}" to player
				stop
			if arg 1 is set:
				if arg 2 is not set:
					send "{@Essentials-spawnmob-none-argument-two}" to player
					stop
				if arg 2 is set:
					spawn arg 2 of arg 1 at the player
					send "{@Essentials-spawnmob}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/spawnmob":
	if sender is a player:
		if player has permission "essentials.spawnmob" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:spawnmob":
	if sender is a player:
		if player has permission "essentials.spawnmob" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /compass [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:compass, essentials:direction, direction
	description: &fEssentials command /compass !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-compass-to-me}" to player
				stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					send "{@Essentials-compass-to-player-admin}" to player
					stop
				if arg 1 is "%player%":
					send "{@Essentials-compass-if-player-of-me}" to player
					stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/compass":
	if sender is a player:
		if player has permission "essentials.compass" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:compass":
	if sender is a player:
		if player has permission "essentials.compass" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /togglejail [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:tjail, essentials:unjail, essentials:jail, essentials:togglejail, tjail, unjail, jail
	description: &fEssentials command /jail !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-jail-none-argument-one}" to player
				stop
			if arg 1 is set:
				if arg 1 is not "%player%":
					if arg 2 is not set:
						if {Essentials.jail.use.jail.%arg 1%} is set:
							delete {Essentials.jail.use.jail.%arg 1%}
							delete {Essentials.use.jail.%arg 1%}
							send "{@Essentials-jail-unjail-to-player}" to arg 1
							send "{@Essentials-jail-unjail-to-player-admin}" to player
							stop
						else:
							send "{@Essentials-jail-jail-if-player-is-set-of-unjail}" to player
							stop
					if arg 2 is set:
						if {Essentials.jails::%arg 2%} is set:
							if {Essentials.jail.use.jail.%arg 1%} is not set:
								set {Essentials.use.jail.%arg 1%} to true
								set {Essentials.jail.use.jail.%arg 1%} to arg 1
								teleport arg 1 to {Essentials.jails::%arg 2%}
								send "{@Essentials-jail-jail-to-player}" to arg 1
								send "{@Essentials-jail-jail-to-player-admin}" to player
								stop
							else:
								send "{@Essentials-jail-jail-if-player-is-set-of-jail}" to player
								stop
						else:
							send "{@Essentials-jail-no-jail}" to player
							stop
				else:
					send "{@Essentials-jail-if-player-of-me}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/tjail":
	if sender is a player:
		if player has permission "essentials.jail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:tjail":
	if sender is a player:
		if player has permission "essentials.jail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/togglejail":
	if sender is a player:
		if player has permission "essentials.jail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:togglejail":
	if sender is a player:
		if player has permission "essentials.jail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/unjail":
	if sender is a player:
		if player has permission "essentials.jail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:unjail":
	if sender is a player:
		if player has permission "essentials.jail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/jail":
	if sender is a player:
		if player has permission "essentials.jail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:jail":
	if sender is a player:
		if player has permission "essentials.jail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on damage:
	if {Essentials.use.jail.%victim%} is set:
		cancel the event
		stop
	else:
		stop

on drop:
	if {Essentials.use.jail.%player%} is set:
		cancel the event
		stop
	else:
		stop

on build:
	if {Essentials.use.jail.%player%} is set:
		cancel the event
		stop
	else:
		stop

on break:
	if {Essentials.use.jail.%player%} is set:
		cancel the event
		stop
	else:
		stop

on teleport:
	if {Essentials.use.jail.%player%} is set:
		cancel the event
		stop
	else:
		stop

on any movement:
	if {Essentials.use.jail.%player%} is set:
		cancel the event
		stop
	else:
		stop

command /setjail [<text>]:
	executable by: player and console
	aliases: essentials:setjail, essentials:createjail, createjail
	description: &fEssentials command /setjail !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-setjail-create-none-argument}" to player
				stop
			if arg 1 is set:
				if {Essentials.list.jails::%arg 1%} is not set:
					set {Essentials.jails::%arg 1%} to location of player
					set {Essentials.list.jails::%arg 1%} to arg 1
					send "{@Essentials-setjail-create-of-jail}" to player
					stop
				if {Essentials.jails::%arg 1%} is set:
					send "{@Essentials-setjail-create-if-jail-is-set}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/createjail":
	if sender is a player:
		if player has permission "essentials.setjail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:createjail":
	if sender is a player:
		if player has permission "essentials.setjail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/setjail":
	if sender is a player:
		if player has permission "essentials.setjail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:setjail":
	if sender is a player:
		if player has permission "essentials.setjail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /jails [<text>]:
	executable by: player and console
	aliases: essentials:jails
	description: &fEssentials command /jails !
	trigger:
		if sender is a player:
			if {Essentials.list.jails::*} is set:
				send "{@Essentials-jails}" to player
				stop
			else:
				send "{@Essentials-jails-no-jail}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/jails":
	if sender is a player:
		if player has permission "essentials.jails" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:jails":
	if sender is a player:
		if player has permission "essentials.jails" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /deljail [<text>]:
	executable by: player and console
	aliases: essentials:deljail, essentials:remjail, essentials:rmjail , remjail, rmjail
	description: &fEssentials command /deljail !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-deljail-remove-none-argument}" to player
				stop
			if arg 1 is set:
				if {Essentials.list.jails::%arg 1%} is set:
					delete {Essentials.jails::%arg 1%}
					delete {Essentials.list.jails::%arg 1%}
					send "{@Essentials-deljail-remove-of-jail}" to player
					stop
				else:
					send "{@Essentials-deljail-remove-no-jail}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/rmjail":
	if sender is a player:
		if player has permission "essentials.deljail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:rmjail":
	if sender is a player:
		if player has permission "essentials.deljail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/remjail":
	if sender is a player:
		if player has permission "essentials.deljail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:remjail":
	if sender is a player:
		if player has permission "essentials.deljail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/deljail":
	if sender is a player:
		if player has permission "essentials.deljail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:deljail":
	if sender is a player:
		if player has permission "essentials.deljail" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /tree [<text>]:
	executable by: player and console
	aliases: essentials:tree
	description: &fEssentials command /tree !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-tree-none-argument}" to player
				stop
			if arg 1 is not "oak" or "jungle" or "spruce" or "acacia" or "birch" or "darkwood":
				send "{@Essentials-tree-none-argument}" to player
				stop
			if arg 1 is "jungle":
				grow tree of type any jungle tree above the targeted block
				send "{@Essentials-tree}" to player
				stop
			if arg 1 is "oak":
				grow oak above the targeted block
				send "{@Essentials-tree}" to player
				stop
			if arg 1 is "spruce":
				grow spruce above the targeted block
				send "{@Essentials-tree}" to player
				stop
			if arg 1 is "acacia":
				grow acacia above the targeted block
				send "{@Essentials-tree}" to player
				stop
			if arg 1 is "birch":
				grow birch tree above the targeted block
				send "{@Essentials-tree}" to player
				stop
			if arg 1 is "darkwood":
				grow dark oak above the targeted block
				send "{@Essentials-tree}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/tree":
	if sender is a player:
		if player has permission "essentials.tree" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:tree":
	if sender is a player:
		if player has permission "essentials.tree" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on load:
	send "{@Essentials-loading-msg-console}" to console
	stop

on unload:
	send "{@Essentials-unloading-msg-console}" to console
	stop

command /tpdeny [<text>]:
	executable by: player and console
	aliases: tpno, essentials:tpaccept, essentials:tpno
	description: &fEssentials command /tpdeny !
	trigger:
		if sender is a player:
			if {Essentials.tpa.%player%} is set:
				send "{@Essentials-tpdeny-send-to-player-admin}" to player
				send "{@Essentials-tpdeny-send-to-player}" to {Essentials.tpa.%player%}
				delete {Essentials.tpa.%player%}
				stop
			else:
				send "{@Essentials-tpdeny-no-player-to-tpa}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/tpno":
	if sender is a player:
		if player has permission "essentials.tpno" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:tpno":
	if sender is a player:
		if player has permission "essentials.tpno" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/tpdeny":
	if sender is a player:
		if player has permission "essentials.tpno" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:tpdeny":
	if sender is a player:
		if player has permission "essentials.tpno" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /tpaccept [<text>]:
	executable by: player and console
	aliases: tpyes, essentials:tpaccept, essentials:tpyes
	description: &fEssentials command /tpaccept !
	trigger:
		if sender is a player:
			if {Essentials.tpa.%player%} is set:
				if {@Essentials-use-tpa-cooldown} is false:
					send "{@Essentials-tpaccept-send-to-player-admin}" to player
					send "{@Essentials-tpaccept-send-to-player}" to {Essentials.tpa.%player%}
					teleport {Essentials.tpa.%player%} to player
					send "{@Essentials-tpaccept-to-teleport-accept}" to player
					wait 1 tick
					delete {Essentials.tpa.%player%}
					stop
				else:
					send "{@Essentials-tpaccept-send-to-player-admin}" to player
					send "{@Essentials-tpaccept-send-to-player}" to {Essentials.tpa.%player%}
					wait {@Essentials-teleport-tpa-cooldown} seconds
					teleport {Essentials.tpa.%player%} to player
					send "{@Essentials-tpaccept-to-teleport-accept}" to player
					wait 1 tick
					delete {Essentials.tpa.%player%}
					stop
			else:
				send "{@Essentials-tpaccept-no-player-to-tpa}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/tpyes":
	if sender is a player:
		if player has permission "essentials.tpaccept" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:tpyes":
	if sender is a player:
		if player has permission "essentials.tpaccept" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/tpaccept":
	if sender is a player:
		if player has permission "essentials.tpaccept" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:tpaccept":
	if sender is a player:
		if player has permission "essentials.tpaccept" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /tpa [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:tpa
	description: &fEssentials command /tpa !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-tpa-none-arguments}" to player
				stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					set {Essentials.tpa.%arg 1%} to player
					send "{@Essentials-tpa-send-to-player-admin}"  to player
					send "{@Essentials-tpa-send-to-player}" to arg 1
					stop
				else:
					send "{@Essentials-tpa-if-player-of-me}" to player
					stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to player
				stop	
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/tpa":
	if sender is a player:
		if player has permission "essentials.tpa" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:tpa":
	if sender is a player:
		if player has permission "essentials.tpa" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop



command /jump [<text>]:
	executable by: player and console
	aliases: essentials:jump
	description: &fEssentials command /jump !
	trigger:
		if sender is a player:
			teleport player to target block
			stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/jump":
	if sender is a player:
		if player has permission "essentials.jump" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:jump":
	if sender is a player:
		if player has permission "essentials.jump" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.warp" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Warp":
				if {Essentials.warp.name.%line 3%} is set:
					set line 1 of block to ""
					set line 2 of block to "&1[Warp]"
					set line 3 of block to line 3
					send "{@Essentials-sign-create}" to player
					stop
				else:
					send "{@Essentials-sign-create-warp-no-warp}" to player
					stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.warp" or "essentials.*":
		if line 2 of block is "&1[Warp]":
			if {Essentials.warp.name.%line 3%} is set:
				set {Essentials.back.use.%player%} to location of player
				teleport player to {Essentials.warp.name.%line 3%}
				send "{@Essentials-warp-teleport-to-me}" to player
				stop
			else:
				send "{@Essentials-sign-create-warp-no-warp}" to player
				stop
	else:
		stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.gamemode.*" or "essentials.sign.create.*" or "essentials.sign.create.gamemode.creative" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Gamemode":
				if line 3 is "Creative" or "1":
					set line 1 of block to ""
					set line 2 of block to "&1[Gamemode]"
					set line 3 of block to "Creative"
					send "{@Essentials-sign-create}" to player
					stop
	else:
		stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.gamemode.*" or "essentials.sign.create.*" or "essentials.sign.create.gamemode.survival" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Gamemode":
				if line 3 is "Survival" or "0":
					set line 1 of block to ""
					set line 2 of block to "&1[Gamemode]"
					set line 3 of block to "Survival"
					send "{@Essentials-sign-create}" to player
					stop
	else:
		stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.gamemode.*" or "essentials.sign.create.*" or "essentials.sign.create.gamemode.adventure" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Gamemode":
				if line 3 is "Adventure" or "2":
					set line 1 of block to ""
					set line 2 of block to "&1[Gamemode]"
					set line 3 of block to "Adventure"
					send "{@Essentials-sign-create}" to player
					stop
	else:
		stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.gamemode.*" or "essentials.sign.create.*" or "essentials.sign.create.gamemode.spectator" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Gamemode":
				if line 3 is "Spectator" or "3":
					set line 1 of block to ""
					set line 2 of block to "&1[Gamemode]"
					set line 3 of block to "Spectator"
					send "{@Essentials-sign-create}" to player
					stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.gamemode.*" or "essentials.sign.use.gamemode.creative" or "essentials.*":
		if line 2 of block is "&1[Gamemode]":
			if line 3 of block is "Creative":
				if player's gamemode is not creative:
					set the gamemode of the player to creative
					send "{@Essentials-gamemode-creative-to-me}" to player
					stop
				if player's gamemode is creative:
					send "{@Essentials-gamemode-creative-to-me-gamemode-is-set}" to player
					stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.gamemode.*" or "essentials.sign.use.gamemode.survival" or "essentials.*":
		if line 2 of block is "&1[Gamemode]":
			if line 3 of block is "Survival":
				if player's gamemode is not survival:
					set the gamemode of the player to survival
					send "{@Essentials-gamemode-survival-to-me}" to player
					stop
				if player's gamemode is survival:
					send "{@Essentials-gamemode-survival-to-me-gamemode-is-set}" to player
					stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.gamemode.*" or "essentials.sign.use.gamemode.adventure" or "essentials.*":
		if line 2 of block is "&1[Gamemode]":
			if line 3 of block is "Adventure":
				if player's gamemode is not adventure:
					set the gamemode of the player to adventure
					send "{@Essentials-gamemode-adventure-to-me}" to player
					stop
				if player's gamemode is adventure:
					send "{@Essentials-gamemode-adventure-to-me-gamemode-is-set}" to player
					stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.gamemode.*" or "essentials.sign.use.gamemode.spectator" or "essentials.*":
		if line 2 of block is "&1[Gamemode]":
			if line 3 of block is "Spectator":
				if player's gamemode is not spectator:
					set the gamemode of the player to spectator
					send "{@Essentials-gamemode-spectator-to-me}" to player
					stop
				if player's gamemode is spectator:
					send "{@Essentials-gamemode-spectator-to-me-gamemode-is-set}" to player
					stop
	else:
		stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.create.*" or "essentials.sign.create.spawn" or "essentials.*":
		if line 1 is "[Essentials]":
			if line 2 is "Spawn":
				set line 1 of block to ""
				set line 2 of block to "&1[Spawn]"
				send "{@Essentials-sign-create}" to player
				stop
	else:
		stop

on right click on sign:
	if player has permission "essentials.sign.*" or "essentials.sign.use.*" or "essentials.sign.use.spawn" or "essentials.*":
		if line 2 of block is "&1[Spawn]":
			set {Essentials.back.use.%player%} to location of player
			teleport player to {Essentials.spawn.point}
			send "{@Essentials-spawn-teleport-player}" to player
			stop
	else:
		stop

command /enchant [<enchantment type>] [<text>]:
	executable by: player and console
	aliases: enchantment, essentials:enchantment, essentials:enchant
	description: &fEssentials command /enchant !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-enchant-none-arguments}" to player
				stop
			if player's tool is air:
				send "{@Essentials-enchant-if-item-is-air}" to player
				stop
			if player's tool is not air:
				enchant player's tool with arg 1
				send "{@Essentials-enchant}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/enchantment":
	if sender is a player:
		if player has permission "essentials.enchant" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:enchantment":
	if sender is a player:
		if player has permission "essentials.enchant" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/enchant":
	if sender is a player:
		if player has permission "essentials.enchant" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:enchant":
	if sender is a player:
		if player has permission "essentials.enchant" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on portal create:
	if {@Essentials-portals-create} is false:
		cancel event
		stop
	else:
		stop

on damage:
	if {@Essentials-damage-all} is true:
		stop
	else:
		cancel event
		stop

command /invsee [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:invsee
	description: &fEssentials command /invsee !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-invsee-none-arguments}" to player
				stop
			if arg 1 is set:
				if arg 1 is online:
					send "{@Essentials-invsee-to-me}" to player
					open arg 1's inventory to player
					stop
				if arg 1 is offline:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/invsee":
	if sender is a player:
		if player has permission "essentials.invsee" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:invsee":
	if sender is a player:
		if player has permission "essentials.invsee" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on sign change:
	if player has permission "essentials.sign.*" or "essentials.sign.color" or "essentials.*":
		replace "&" with "§" in line 1
		replace "&" with "§" in line 2
		replace "&" with "§" in line 3
		replace "&" with "§" in line 4
		stop
	else:
		stop

command /fireball [<text>]:
	executable by: player and console
	aliases: essentials:fireball
	description: &fEssentials command /fireball !
	trigger:
		if sender is a player:
			shoot a fireball from the player
			send "{@Essentials-fireball}" to player
			stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/fireball":
	if sender is a player:
		if player has permission "essentials.fireball" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:fireball":
	if sender is a player:
		if player has permission "essentials.fireball" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /ext [<offline player>] [<text>]:
	executable by: player and console
	aliases: extinguish, essentials:extinguish, essentials:ext
	description: &fEssentials command /ext !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				set the player on fire for 0 seconds
				send "{@Essentials-ext-to-me}" to player
				stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					if player doesn't have permission "essentials.ext.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						set arg 1 on fire for 0 seconds
						send "{@Essentials-ext-to-player}" to arg 1
						send "{@Essentials-ext-to-player-admin}" to player
						stop
				else:
					if player doesn't have permission "essentials.ext.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-ext-if-player-of-me}" to player
						stop
			if arg 1 is offline:
				if player doesn't have permission "essentials.depth.others" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/extinguish":
	if sender is a player:
		if player has permission "essentials.ext" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:extinguish":
	if sender is a player:
		if player has permission "essentials.ext" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/ext":
	if sender is a player:
		if player has permission "essentials.ext" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:ext":
	if sender is a player:
		if player has permission "essentials.ext" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /depth [<offline player>] [<text>]:
	executable by: player and console
	aliases: height, essentials:height, essentials:depth
	description: &fEssentials command /unlimited !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-depth-to-me}" to player
				stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					if player doesn't have permission "essentials.depth.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-depth-to-player-admin}" to player
						stop
				else:
					if player doesn't have permission "essentials.depth.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-depth-if-player-of-me}" to player
						stop
			if arg 1 is offline:
				if player doesn't have permission "essentials.depth.others" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/height":
	if sender is a player:
		if player has permission "essentials.depth" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:height":
	if sender is a player:
		if player has permission "essentials.depth" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/depth":
	if sender is a player:
		if player has permission "essentials.depth" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:depth":
	if sender is a player:
		if player has permission "essentials.depth" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /unlimited [<offline player>] [<text>]:
	executable by: player and console
	aliases: ul, unl, essentials:unlimited, essentials:ul, essentials:unl
	description: &fEssentials command /unlimited !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				if {Essentials.unlimited.%player%} is not set:
					set {Essentials.unlimited.%player%} to 1
					send "{@Essentials-unlimited-to-me-on}" to player
					stop
				if {Essentials.unlimited.%player%} is set:
					clear {Essentials.unlimited.%player%}
					send "{@Essentials-unlimited-to-me-off}" to player
					stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					if player doesn't have permission "essentials.unlimited.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						if {Essentials.unlimited.%arg 1%} is not set:
							set {Essentials.unlimited.%arg 1%} to 1
							send "{@Essentials-unlimited-to-player-on}" to arg 1
							send "{@Essentials-unlimited-to-player-admin-on}" to player
							stop
						else:
							clear {Essentials.unlimited.%arg 1%}
							send "{@Essentials-unlimited-to-player-off}" to arg 1
							send "{@Essentials-unlimited-to-player-admin-off}" to player
							stop
				else:
					if player doesn't have permission "essentials.unlimited.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-unlimited-if-player-of-me}" to player
						stop
			if arg 1 is offline:
				if player doesn't have permission "essentials.unlimited.others" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on place:
	if {Essentials.unlimited.%player%} is set:
		give 0 of event-block to the player
		stop

on command "/unl":
	if sender is a player:
		if player has permission "essentials.unlimited" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:unl":
	if sender is a player:
		if player has permission "essentials.unlimited" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/ul":
	if sender is a player:
		if player has permission "essentials.unlimited" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:ul":
	if sender is a player:
		if player has permission "essentials.unlimited" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/unlimited":
	if sender is a player:
		if player has permission "essentials.unlimited" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:unlimited":
	if sender is a player:
		if player has permission "essentials.unlimited" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /workbench:
	executable by: player and console
	aliases: craft, wb, essentials:workbench, essentials:craft, essentials:wb
	description: &fEssentials command /workbench !
	trigger:
		if sender is a player:
			open workbench inventory to the player
			send "{@Essentials-workbench}" to player
			stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/craft":
	if sender is a player:
		if player has permission "essentials.workbench" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:craft":
	if sender is a player:
		if player has permission "essentials.workbench" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/wb":
	if sender is a player:
		if player has permission "essentials.workbench" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:wb":
	if sender is a player:
		if player has permission "essentials.workbench" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/workbench":
	if sender is a player:
		if player has permission "essentials.workbench" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:workbench":
	if sender is a player:
		if player has permission "essentials.workbench" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on connect:
	if {Essentials.banip.player.%player%} is true:
		kick player because "{@Essentials-ban-reason-banned}"
		stop
	else:
		stop

on connect:
	if {Essentials.banip.player.%player%} is true:
		kick player because "{@Essentials-banip-reason-banned}"
		stop
	else:
		stop

command /ban [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:ban
	description: &fEssentials command /ban !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-ban-none-arguments}" to player
				stop
			if arg 1 is set:
				if {Essentials.ban.player.%arg 1%} is not set:
					ban arg 1
					kick arg 1 because "{@Essentials-ban-reason-banned}"
					set {Essentials.banip.player.%arg 1%} to true
					set {Essentials.ban.player.%arg 1%} to true
					send "{@Essentials-ban-to-player-admin}" to player
					stop
				if {Essentials.ban.player.%arg 1%} is false:
					ban arg 1
					kick arg 1 because "{@Essentials-ban-reason-banned}"
					set {Essentials.banip.player.%arg 1%} to true
					set {Essentials.ban.player.%arg 1%} to true
					send "{@Essentials-ban-to-player-admin}" to player
					stop
				if {Essentials.ban.player.%arg 1%} is true:
					send "{@Essentials-ban-if-player-is-banned}" to player
					stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-ban-none-arguments}" to console
				stop
			if arg 1 is set:
				if {Essentials.ban.player.%arg 1%} is not set:
					ban arg 1
					kick arg 1 because "{@Essentials-ban-reason-banned}"
					set {Essentials.banip.player.%arg 1%} to true
					set {Essentials.ban.player.%arg 1%} to true
					send "{@Essentials-ban-to-player-admin}" to console
					stop
				if {Essentials.ban.player.%arg 1%} is false:
					ban arg 1
					kick arg 1 because "{@Essentials-ban-reason-banned}"
					set {Essentials.banip.player.%arg 1%} to true
					set {Essentials.ban.player.%arg 1%} to true
					send "{@Essentials-ban-to-player-admin}" to console
					stop
				if {Essentials.ban.player.%arg 1%} is true:
					send "{@Essentials-ban-if-player-is-banned}" to console
					stop

on command "/ban":
	if sender is a player:
		if player has permission "essentials.ban" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:ban":
	if sender is a player:
		if player has permission "essentials.ban" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /banip [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:banip, essentials:ban-ip, ban-ip
	description: &fEssentials command /banip !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-banip-none-arguments}" to player
				stop
			if arg 1 is set:
				if {Essentials.banip.player.%arg 1%} is not set:
					IP-ban arg 1
					kick arg 1 because "{@Essentials-banip-reason-banned}"
					set {Essentials.banip.player.%arg 1%} to true
					set {Essentials.ban.player.%arg 1%} to true
					send "{@Essentials-banip-to-player-admin}" to player
					stop
				if {Essentials.banip.player.%arg 1%} is false:
					IP-ban arg 1
					kick arg 1 because "{@Essentials-banip-reason-banned}"
					set {Essentials.banip.player.%arg 1%} to true
					set {Essentials.ban.player.%arg 1%} to true
					send "{@Essentials-banip-to-player-admin}" to player
					stop
				if {Essentials.banip.player.%arg 1%} is true:
					send "{@Essentials-banip-if-ip-of-player-is-banned}" to player
					stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-banip-none-arguments}" to console
				stop
			if arg 1 is set:
				if {Essentials.banip.player.%arg 1%} is not set:
					IP-ban arg 1
					kick arg 1 because "{@Essentials-banip-reason-banned}"
					set {Essentials.banip.player.%arg 1%} to true
					set {Essentials.ban.player.%arg 1%} to true
					send "{@Essentials-banip-to-player-admin}" to console
					stop
				if {Essentials.banip.player.%arg 1%} is false:
					IP-ban arg 1
					kick arg 1 because "{@Essentials-banip-reason-banned}"
					set {Essentials.banip.player.%arg 1%} to true
					set {Essentials.ban.player.%arg 1%} to true
					send "{@Essentials-banip-to-player-admin}" to console
					stop
				if {Essentials.banip.player.%arg 1%} is true:
					send "{@Essentials-banip-if-ip-of-player-is-banned}" to console
					stop

on command "/ban-ip":
	if sender is a player:
		if player has permission "essentials.banip" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:ban-ip":
	if sender is a player:
		if player has permission "essentials.banip" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/banip":
	if sender is a player:
		if player has permission "essentials.banip" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:banip":
	if sender is a player:
		if player has permission "essentials.banip" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /unban [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:unban
	description: &fEssentials command /unban !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-unban-none-arguments}" to player
				stop
			if arg 1 is set:
				if {Essentials.ban.player.%arg 1%} is not set:
					unban arg 1
					make console execute command "/pardon-ip %{Essentials.ip.%arg 1%}%"
					IP-unban arg 1
					set {Essentials.banip.player.%arg 1%} to false
					set {Essentials.ban.player.%arg 1%} to false
					send "{@Essentials-unban-to-player-admin}" to player
					stop
				if {Essentials.ban.player.%arg 1%} is true:
					unban arg 1
					make console execute command "/pardon-ip %{Essentials.ip.%arg 1%}%"
					IP-unban arg 1
					set {Essentials.banip.player.%arg 1%} to false
					set {Essentials.ban.player.%arg 1%} to false
					send "{@Essentials-unban-to-player-admin}" to player
					stop
				if {Essentials.ban.player.%arg 1%} is false:
					send "{@Essentials-unban-if-player-is-unbanned}" to player
					stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-unban-none-arguments}" to console
				stop
			if arg 1 is set:
				if {Essentials.ban.player.%arg 1%} is not set:
					unban arg 1
					make console execute command "/pardon-ip %{Essentials.ip.%arg 1%}%"
					IP-unban arg 1
					set {Essentials.banip.player.%arg 1%} to false
					set {Essentials.ban.player.%arg 1%} to false
					send "{@Essentials-unban-to-player-admin}" to console
					stop
				if {Essentials.ban.player.%arg 1%} is true:
					unban arg 1
					make console execute command "/pardon-ip %{Essentials.ip.%arg 1%}%"
					IP-unban arg 1
					set {Essentials.banip.player.%arg 1%} to false
					set {Essentials.ban.player.%arg 1%} to false
					send "{@Essentials-unban-to-player-admin}" to console
					stop
				if {Essentials.ban.player.%arg 1%} is false:
					send "{@Essentials-unban-if-player-is-unbanned}" to console
					stop

on command "/unban":
	if sender is a player:
		if player has permission "essentials.unban" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:unban":
	if sender is a player:
		if player has permission "essentials.unban" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /unbanip [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:unbanip, unban-ip, essentials:unban-ip
	description: &fEssentials command /unbanip !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-unbanip-none-arguments}" to player
				stop
			if arg 1 is set:
				if {Essentials.banip.player.%arg 1%} is not set:
					make console execute command "/pardon-ip %{Essentials.ip.%arg 1%}%"
					IP-unban arg 1
					set {Essentials.banip.player.%arg 1%} to false
					set {Essentials.ban.player.%arg 1%} to false
					send "{@Essentials-unbanip-to-player-admin}" to player
					stop
				if {Essentials.banip.player.%arg 1%} is true:
					make console execute command "/pardon-ip %{Essentials.ip.%arg 1%}%"
					IP-unban arg 1
					set {Essentials.banip.player.%arg 1%} to false
					set {Essentials.ban.player.%arg 1%} to false
					send "{@Essentials-unbanip-to-player-admin}" to player
					stop
				else:
					send "{@Essentials-unbanip-if-ip-of-player-is-unbanned}" to player
					stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-unbanip-none-arguments}" to console
				stop
			if arg 1 is set:
				if {Essentials.banip.player.%arg 1%} is not set:
					make console execute command "/pardon-ip %{Essentials.ip.%arg 1%}%"
					IP-unban arg 1
					set {Essentials.banip.player.%arg 1%} to false
					set {Essentials.ban.player.%arg 1%} to false
					send "{@Essentials-unbanip-to-player-admin}" to console
					stop
				if {Essentials.banip.player.%arg 1%} is true:
					make console execute command "/pardon-ip %{Essentials.ip.%arg 1%}%"
					IP-unban arg 1
					set {Essentials.banip.player.%arg 1%} to false
					set {Essentials.ban.player.%arg 1%} to false
					send "{@Essentials-unbanip-to-player-admin}" to console
					stop
				else:
					send "{@Essentials-unbanip-if-ip-of-player-is-unbanned}" to console
					stop

on join:
	set {Essentials.ip.%player%} to ip of player
	stop

on command "/unban-ip":
	if sender is a player:
		if player has permission "essentials.unbanip" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:unban-ip":
	if sender is a player:
		if player has permission "essentials.unbanip" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/unbanip":
	if sender is a player:
		if player has permission "essentials.unbanip" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:unbanip":
	if sender is a player:
		if player has permission "essentials.unbanip" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /antioch:
	executable by: player and console
	aliases: grenade, tnt, essentials:grenade, essentials:tnt, essentials:antioch
	description: &fEssentials command /antioch !
	trigger:
		if sender is a player:
			spawn 1 primed tnt at the targeted block
			send "{@Essentials-antioch}" to player
			stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/tnt":
	if sender is a player:
		if player has permission "essentials.antioch" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:tnt":
	if sender is a player:
		if player has permission "essentials.antioch" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/grenade":
	if sender is a player:
		if player has permission "essentials.antioch" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:grenade":
	if sender is a player:
		if player has permission "essentials.antioch" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/antoch":
	if sender is a player:
		if player has permission "essentials.antioch" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:antoch":
	if sender is a player:
		if player has permission "essentials.antioch" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /break:
	executable by: player and console
	aliases: essentials:break
	description: &fEssentials command /break !
	trigger:
		if sender is a player:
			delete the targeted block
			send "{@Essentials-break}" to player
			stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/break":
	if sender is a player:
		if player has permission "essentials.break" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:break":
	if sender is a player:
		if player has permission "essentials.break" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /xp [<text>] [<offline player>] [<integer>] [<text>]:	
	executable by: player and console
	aliases: essentials:xp, exp, essentials:exp
	description: &fEssentials command /xp !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-xp-none-arguments}" to player
				stop
			if arg 1 is not "show" or "set" or "give" or "remove":
				send "{@Essentials-xp-none-arguments}" to player
				stop
			if arg 1 is "show":
				if player doesn't have permission "essentials.xp.*" or "essentials.xp.show" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					if arg 2 is not set:
						send "{@Essentials-xp-show-to-me}" to player
						stop
					if arg 2 is online:
						if arg 3 is not set:
							if player is not "%arg 2%":
								send "{@Essentials-xp-show-to-player-admin}" to player
								stop
							else:
								send "{@Essentials-xp-show-if-player-of-me}" to player
								stop
					if arg 2 is offline:
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
			if arg 1 is "set":
				if player doesn't have permission "essentials.xp.*" or "essentials.xp.set" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					if arg 2 is not set:
						send "{@Essentials-xp-remove-none-arguments-one}" to player
						stop
					if arg 2 is online:
						if arg 3 is set:
							send "{@Essentials-xp-set-to-player-admin}" to player
							set level of arg 2 to arg 3
							send "{@Essentials-xp-set-to-player}" to arg 2
							stop
						if arg 3 is not set:
							send "{@Essentials-xp-set-none-arguments-two}" to player
							stop
					if arg 2 is offline:
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
			if arg 1 is "give":
				if player doesn't have permission "essentials.xp.*" or "essentials.xp.give" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					if arg 2 is not set:
						send "{@Essentials-xp-remove-none-arguments-one}" to player
						stop
					if arg 2 is online:
						if arg 3 is set:
							send "{@Essentials-xp-give-to-player-admin}" to player
							add arg 3 to level of arg 2
							send "{@Essentials-xp-give-to-player}" to arg 2
							stop
						if arg 3 is not set:
							send "{@Essentials-xp-give-none-arguments-two}" to player
							stop
					if arg 2 is offline:
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
			if arg 1 is "remove":
				if player doesn't have permission "essentials.xp.*" or "essentials.xp.remove" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					if arg 2 is not set:
						send "{@Essentials-xp-remove-none-arguments-one}" to player
						stop
					if arg 2 is online:
						if arg 3 is set:
							send "{@Essentials-xp-remove-to-player-admin}" to player
							remove arg 3 from level of arg 2
							send "{@Essentials-xp-remove-to-player}" to arg 2
							stop
						if arg 3 is not set:
							send "{@Essentials-xp-remove-none-arguments-two}" to player
							stop
					if arg 2 is offline:
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/exp":
	if sender is a player:
		if player has permission "essentials.xp" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:exp":
	if sender is a player:
		if player has permission "essentials.xp" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/xp":
	if sender is a player:
		if player has permission "essentials.xp" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:xp":
	if sender is a player:
		if player has permission "essentials.xp" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /back [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:back, return, essentials:return
	description: &fEssentials command /back !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				if {Essentials.back.use.%player%} is not set:
					send "{@Essentials-back-no-back-point-to-me}" to player
					stop
				else:
					if {@Essentials-use-back-cooldown} is true:
						if player doesn't have permission "essentials.back.bypass" or "essentials.*":
							send "{@Essentials-back-teleport-player-coodown}" to player
							wait {@Essentials-teleport-back-cooldown} seconds
							teleport player to {Essentials.back.use.%player%}
							send "{@Essentials-back-teleport}" to player
							stop
						else:
							teleport player to {Essentials.back.use.%player%}
							send "{@Essentials-back-teleport}" to player
							stop
					else:
						teleport player to {Essentials.back.use.%player%}
						send "{@Essentials-back-teleport}" to player
						stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					if player doesn't have permission "essentials.back.others" or "essentials.*":
						if {Essentials.back.use.%arg 1%} is not set:
							send "{@Essentials-back-no-back-point-to-player-admin}" to player
							stop
						else:
							teleport arg 1 to {Essentials.back.use.%arg 1%}
							send "{@Essentials-back-teleport-to-player}" to arg 1
							send "{@Essentials-back-teleport-to-player-admin}" to player
							stop
					else:
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
				else:
					if player doesn't have permission "essentials.back.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-back-if-player-of-me}" to player
						stop
			if arg 1 is offline:
				if player doesn't have permission "essentials.back.others" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop		
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on join:
	delete {Essentials.back.use.%player%}
	stop

on command "/return":
	if sender is a player:
		if player has permission "essentials.back" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:return":
	if sender is a player:
		if player has permission "essentials.back" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/back":
	if sender is a player:
		if player has permission "essentials.back" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:back":
	if sender is a player:
		if player has permission "essentials.back" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /list [<text>]:
	executable by: player and console
	aliases: who, playerlist, online, plist, essentials:who, essentials:playerlist, essentials:online, essentials:plist, essentials:list
	description: &fEssentials command /list !
	trigger:
		if sender is a player:
			loop all players:
				send "{@Essentials-list}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/plist":
	if sender is a player:
		if player has permission "essentials.list" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:plist":
	if sender is a player:
		if player has permission "essentials.list" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/online":
	if sender is a player:
		if player has permission "essentials.list" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:online":
	if sender is a player:
		if player has permission "essentials.list" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/playerlist":
	if sender is a player:
		if player has permission "essentials.list" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:playerlist":
	if sender is a player:
		if player has permission "essentials.list" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/who":
	if sender is a player:
		if player has permission "essentials.list" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:who":
	if sender is a player:
		if player has permission "essentials.list" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/list":
	if sender is a player:
		if player has permission "essentials.list" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:list":
	if sender is a player:
		if player has permission "essentials.list" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /getpos [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:getpos, coords, position, whereami, getlocation, getloc, essentials:getloc, essentials:getlocation, essentials:whereami, essentials:position, essentials:coords
	description: &fEssentials command /getpos !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-getpos-for-to-me}" to player
				stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					if player doesn't have permission "essentials.getpos.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-getpos-for-to-player-admin}" to player
						stop
				else:
					if player doesn't have permission "essentials.getpos.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-getpos-if-player-of-me}" to player
						stop
			if arg 1 is offline:
				if player doesn't have permission "essentials.getpos.others" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/getloc":
	if sender is a player:
		if player has permission "essentials.getpos" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:getloc":
	if sender is a player:
		if player has permission "essentials.getpos" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/getlocation":
	if sender is a player:
		if player has permission "essentials.getpos" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:getlocation":
	if sender is a player:
		if player has permission "essentials.getpos" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/whereami":
	if sender is a player:
		if player has permission "essentials.getpos" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:whereami":
	if sender is a player:
		if player has permission "essentials.getpos" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/position":
	if sender is a player:
		if player has permission "essentials.getpos" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:position":
	if sender is a player:
		if player has permission "essentials.getpos" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/coords":
	if sender is a player:
		if player has permission "essentials.getpos" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:coords":
	if sender is a player:
		if player has permission "essentials.getpos" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/getpos":
	if sender is a player:
		if player has permission "essentials.getpos" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:getpos":
	if sender is a player:
		if player has permission "essentials.getpos" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /god [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:god
	description: &fEssentials command /god !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				if {Essentials.god.%player%} is false:
					set {Essentials.god.%player%} to true
					send "{@Essentials-god-to-me-to-on}" to player
					stop
				if {Essentials.god.%player%} is true:
					set {Essentials.god.%player%} to false
					send "{@Essentials-god-to-me-to-off}" to player
					stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					if player doesn't have permission "essentials.god.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						if {Essentials.god.%arg 1%} is false:
							set {Essentials.god.%arg 1%} to true
							send "{@Essentials-god-to-player-admin-to-on}" to player
							send "{@Essentials-god-to-player-to-on}" to arg 1
							stop
						if {Essentials.god.%arg 1%} is true:
							set {Essentials.god.%arg 1%} to false
							send "{@Essentials-god-to-player-admin-to-off}" to player
							send "{@Essentials-god-to-player-to-off}" to arg 1
							stop
				else:
					if player doesn't have permission "essentials.god.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-god-if-player-of-me}" to player
						stop
			if arg 1 is offline:
				if player doesn't have permission "essentials.god.others" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on first join:
	if player's gamemode is survival or adventure:
		set {Essentials.god.%player%} to false
		stop
	if player's gamemode is creative or spectator:
		set {Essentials.god.%player%} to true
		stop

on join:
	if player's gamemode is survival or adventure:
		set {Essentials.god.%player%} to false
		stop
	if player's gamemode is creative or spectator:
		set {Essentials.god.%player%} to true
		stop

on damage:
	if {Essentials.god.%victim%} is true:
		cancel event
		stop
	else:
		stop

on command "/god":
	if sender is a player:
		if player has permission "essentials.god" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:god":
	if sender is a player:
		if player has permission "essentials.god" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /pay [<offline player>] [<number>] [<text>]:
	executable by: player and console
	aliases: essentials:pay
	description: &fEssentials command /pay !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-pay-set-none-arguments-one}" to player
				stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					if arg 2 is set:
						if 0 is less than arg 2:
							send "{@Essentials-pay-is-negative-numbers}" to player
							stop
						if {Essentials.money.%player%} is less than arg 2:
							send "{@Essentials-pay-if-player-is-not-money}" to player
							stop
						else:
							remove arg 2 from {Essentials.money.%player%}
							add arg 2 to {Essentials.money.%arg 1%}
							send "{@Essentials-pay-to-player-admin}" to player
							send "{@Essentials-pay-to-player}" to arg 1
							stop
					if arg 2 is not set:
						send "{@Essentials-pay-set-none-arguments-two}" to player
						stop
				else:
					send "{@Essentials-pay-if-player-of-me}" to player
					stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/pay":
	if sender is a player:
		if player has permission "essentials.pay" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:pay":
	if sender is a player:
		if player has permission "essentials.pay" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /money [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:money, balance, bal, essentials:balance, essentials:bal
	description: &fEssentials command /eco !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				if {Essentials.money.%player%} is not set:
					send "{@Essentials-money-if-money-is-not-set}" to player
					stop
				else:
					send "{@Essentials-money-to-me}" to player
					stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					if player doesn't have permission "essentials.money.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						if {Essentials.money.%arg 1%} is not set:
							send "{@Essentials-money-if-money-is-not-set}" to player
							stop
						else:
							send "{@Essentials-money-to-player-admin}" to player
							stop
				else:
					if player doesn't have permission "essentials.money.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-money-if-player-of-me}" to player 
						stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to player
				stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-money-set-none-arguments}" to console
				stop
			if arg 1 is online:
				if {Essentials.money.%arg 1%} is not set:
					send "{@Essentials-money-if-money-is-not-set}" to console
					stop
				else:
					send "{@Essentials-money-to-player-admin}" to console
					stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to console
				stop

on first join:
	if {@Essentials-money-to-firstjoin-use} is true:
		set {Essentials.money.%player%} to {@Essentials-money-to-firstjoin-numbers}
		stop
	else:
		stop

on command "/balance":
	if sender is a player:
		if player has permission "essentials.money" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:balance":
	if sender is a player:
		if player has permission "essentials.money" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/bal":
	if sender is a player:
		if player has permission "essentials.money" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:bal":
	if sender is a player:
		if player has permission "essentials.money" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/money":
	if sender is a player:
		if player has permission "essentials.money" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:money":
	if sender is a player:
		if player has permission "essentials.money" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /eco [<text>] [<offline player>] [<number>] [<text>]:
	executable by: player and console
	aliases: essentials:eco, essentials:economy, economy
	description: &fEssentials command /eco !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-eco-none-arguments}" to player
				stop
			if arg 1 is not "give" or "remove" or "set":
				send "{@Essentials-eco-none-arguments}" to player
				stop
			if arg 1 is "set":
				if player doesn't have permission "essentials.eco.*" or "essentials.eco.set" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					if arg 2 is not set:
						send "{@Essentials-eco-set-none-arguments-one}" to player
						stop
					if arg 2 is online:
						if arg 3 is not set:
							send "{@Essentials-eco-set-none-arguments-two}" to player
							stop
						if arg 3 is set:
							set {Essentials.money.%arg 2%} to arg 3
							send "{@Essentials-eco-set-player-to-player-admin}" to player
							send "{@Essentials-eco-set-player-to-player}" to arg 2
							stop
					if arg 2 is offline:
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
			if arg 1 is "give":
				if player doesn't have permission "essentials.eco.*" or "essentials.eco.give" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					if arg 2 is not set:
						send "{@Essentials-eco-give-none-arguments-one}" to player
						stop
					if arg 2 is online:
						if arg 3 is not set:
							send "{@Essentials-eco-give-none-arguments-two}" to player
							stop
						if arg 3 is set:
							add arg 3 to {Essentials.money.%arg 2%}
							send "{@Essentials-eco-give-player-to-player-admin}" to player
							send "{@Essentials-eco-give-player-to-player}" to arg 2
					if arg 2 is offline:
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
			if arg 1 is "remove":
				if player doesn't have permission "essentials.eco.*" or "essentials.eco.remove" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:					
					if arg 2 is not set:
						send "{@Essentials-eco-remove-none-arguments-one}" to player
						stop
					if arg 2 is online:
						if arg 3 is not set:
							send "{@Essentials-eco-remove-none-arguments-two}" to player
							stop
						if arg 3 is set:
							if {Essentials.money.%arg 2%} > arg 3:
								remove arg 3 from {Essentials.money.%arg 2%}
								send "{@Essentials-eco-remove-player-to-player-admin}" to player
								send "{@Essentials-eco-remove-player-to-player}" to arg 2
							else:
								send "{@Essentials-eco-remove-no-money-max-player-to-player-admin}" to player
								stop
					if arg 2 is offline:
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/eco":
	if sender is a player:
		if player has permission "essentials.eco" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:eco":
	if sender is a player:
		if player has permission "essentials.eco" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/economy":
	if sender is a player:
		if player has permission "essentials.eco" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:economy":
	if sender is a player:
		if player has permission "essentials.eco" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop


command /adminhome [<text>] [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:adminhome
	description: &fEssentials command /adminhome !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-adminhome-none-arguments}" to player
				stop
			if arg 1 is not "delhome" or "reset" or "home" or "homes" or "sethome":
				send "{@Essentials-adminhome-none-arguments}" to player
				stop
			if arg 1 is "delhome":
				if arg 2 is not set:
					send "{@Essentials-adminhome-delhome-none-arguments-one}" to player
					stop
				if arg 2 is online:
					if arg 3 is not set:
						send "{@Essentials-adminhome-delhome-none-arguments-two}" to player
						stop
					if arg 3 is set:
						if {Essentials.home.%arg 2%::%arg 3%} is not set:
							send "{@Essentials-adminhome-delhome-home-is-not-set}" to player
							stop
						else:
							remove arg 3 from {Essentials.homes.%player%.list::*}
							remove arg 3 from {Essentials.home.%arg 2%::*}
							remove 1 from {Essentials.home.numbers.%player%}
							send "{@Essentials-adminhome-delhome}" to player
							stop
			if arg 1 is "reset":
				if arg 2 is not set:
					send "{@Essentials-adminhome-reset-none-arguments}" to player
					stop
				if arg 2 is online:
					if {Essentials.home.%arg 2%::*} is set:
						delete {Essentials.homes.%arg 2%.list::*}
						delete {Essentials.home.%arg 2%::*}
						set {Essentials.home.numbers.%arg 2%} to 0
						send "{@Essentials-adminhome-reset}" to player
						stop
					else:
						send "{@Essentials-adminhome-reset-home-is-not-set}" to player
						stop
				if arg 2 is offline:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
			if arg 1 is "home":
				if arg 2 is not set:
					send "{@Essentials-adminhome-home-none-arguments-one}" to player
					stop
				if arg 2 is online:
					if arg 3 is not set:
						send "{@Essentials-adminhome-home-none-arguments-two}" to player
						stop
					if arg 3 is set:
						if {Essentials.home.%arg 2%::%arg 3%} is not set:
							send "{@Essentials-adminhome-teleport-home-is-not-set}" to player
							stop
						else:
							set {Essentials.back.use.%player%} to location of player
							teleport player to {Essentials.home.%arg 2%::%arg 3%}
							send "{@Essentials-adminhome-teleport-home}" to player
							stop
				if arg 2 is offline:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
			if arg 1 is "homes":
				if arg 2 is not set:
					send "{@Essentials-adminhome-homes-none-arguments}" to player
					stop
				if arg 2 is online:
					if {Essentials.homes.%arg 2%.list::*} is not set:
						send "{@Essentials-adminhome-no-home-list}" to player
						stop
					else:
						send "{@Essentials-adminhome-homes}" to player
						stop
				if arg 2 is offline:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
			if arg 1 is "sethome":
				if arg 2 is not set:
					send "{@Essentials-adminhome-sethome-none-arguments-one}" to player
					stop
				if arg 2 is online:
					if arg 3 is not set:
						send "{@Essentials-adminhome-sethome-none-arguments-two}" to player
						stop
					if arg 3 is set:
						if {Essentials.home.%arg 2%::%arg 3%} is not set:
							set {Essentials.home.%arg 2%::%arg 3%} to arg 3
							set {Essentials.homes.%arg 2%.list::%arg 3%} to arg 3
							add 1 to {Essentials.home.numbers.%arg 2%}
							send "{@Essentials-adminhome-sethome}" to player
							stop
						else:
							send "{@Essentials-adminhome-sethome-home-is-set}" to player
							stop
				if arg 2 is offline:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/adminhome":
	if sender is a player:
		if player has permission "essentials.adminhome" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:adminhome":
	if sender is a player:
		if player has permission "essentials.adminhome" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/sethome":
	if sender is a player:
		if player has permission "essentials.sethome" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:sethome":
	if sender is a player:
		if player has permission "essentials.sethome" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /delhome [<text>]:
	executable by: player and console
	aliases: essentials:delhome
	description: &fEssentials command /delhome !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-delhome-none-arguments}"
				stop
			if arg 1 is set:
				if {Essentials.home.%player%::%arg 1%} is not set:
					send "{@Essentials.home.no.home}" to player
					stop
				else:
					delete {Essentials.home.%player%::%arg 1%}
					send "{@Essentials-delhome-delhome}" to player
					remove 1 from {Essentials.home.numbers.%player%}
					remove arg 1 from {Essentials.homes.%player%.list::*}
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/delhome":
	if sender is a player:
		if player has permission "essentials.delhome" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:delhome":
	if sender is a player:
		if player has permission "essentials.delhome" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /home [<text>]:
	executable by: player and console
	aliases: essentials:home
	description: &fEssentials command /home !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-home-none-arguments}" to player
				stop
			if arg 1 is set:
				if {Essentials.home.%player%::%arg 1%} is not set:
					send "{@Essentials.home.no.home}" to player
					stop
				else:
					if {@Essentials-use-home-cooldown} is true:
						if player doesn't have permission "essentials.home.bypass" or "essentials.*":
							send "{@Essentials-home-teleport-player-coodown}" to player
							wait {@Essentials-teleport-home-cooldown} seconds
							send "{@Essentials.home.teleport-to-me}" to player
							set {Essentials.back.use.%player%} to location of player
							teleport player to {Essentials.home.%player%::%arg 1%}
							stop
						else:
							send "{@Essentials.home.teleport-to-me}" to player
							set {Essentials.back.use.%player%} to location of player
							teleport player to {Essentials.home.%player%::%arg 1%}
							stop
					else:
						set {Essentials.back.use.%player%} to location of player
						teleport player to {Essentials.home.%player%::%arg 1%}
						send "{@Essentials.home.teleport-to-me}" to player
						stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/home":
	if sender is a player:
		if player has permission "essentials.home" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:home":
	if sender is a player:
		if player has permission "essentials.home" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /homes:
	executable by: player and console
	aliases: essentials:homes
	description: &fEssentials command /homes !
	trigger:
		if sender is a player:
			if {Essentials.homes.%player%.list::*} is not set:
				send "{@Essentials-homes-no-home-list}" to player
				stop
			else:
				send "{@Essentials-homes-list}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/homes":
	if sender is a player:
		if player has permission "essentials.homes" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:homes":
	if sender is a player:
		if player has permission "essentials.homes" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /nick [<text>] [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:nick, nickname, essentials:nickname
	description: &fEssentials command /nick !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-nick-none-arguments}" to player
				stop
			if arg 1 is not "off":
				if arg 2 is not set:
					set {Essentials.nick.%player%} to coloured arg 1
					send "{@Essentials-nick-nick-name-to-me}" to player
					stop
				if arg 2 is online:
					set {Essentials.nick.%arg 2%} to coloured arg 1
					send "{@Essentials-nick-nick-name-to-player}" to arg 2
					send "{@Essentials-nick-nick-name-to-player-admin}" to player
					stop
				if arg 2 is offline:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
			if arg 1 is "off":
				if arg 2 is not set:
					set {Essentials.nick.%player%} to player
					send "{@Essentials-nick-nick-reset-to-me}" to player
					stop
				if arg 2 is online:
					set {Essentials.nick.%arg 2%} to arg 2
					send "{@Essentials-nick-nick-reset-to-player}" to arg 2
					send "{@Essentials-nick-nick-reset-to-player-admin}" to player
					stop
				if arg 2 is offline:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on join:
	set {Essentials.nick.%player%} to player
	stop

on first join:
	set {Essentials.nick.%player%} to player
	stop

on command "/nickname":
	if sender is a player:
		if player has permission "essentials.nick" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:nickname":
	if sender is a player:
		if player has permission "essentials.nick" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/nick":
	if sender is a player:
		if player has permission "essentials.nick" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:nick":
	if sender is a player:
		if player has permission "essentials.nick" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /kickall [<text>]:
	executable by: player and console
	aliases: essentials:kickall
	description: &fEssentials command /kickall !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-kickall-none-arguments}" to player
				stop
			if arg 1 is set:
				loop all players:
					kick all players because "{@Essentials-kickall-kick-broadcast}"
					stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-kickall-none-arguments}" to console
				stop
			if arg 1 is set:
				loop all players:
					kick all players because "{@Essentials-kickall-kick-broadcast}"
					stop

on command "/kickall":
	if sender is a player:
		if player has permission "essentials.kickall" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:kickall":
	if sender is a player:
		if player has permission "essentials.kickall" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /unmute [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:unmute
	description: &fEssentials command /unmute !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-unmute-none-arguments}" to player
				stop
			if arg 1 is online:
				if {Essentials.mute.%arg 1%} is true:
					set {Essentials.mute.seconds.%arg 1%} to false
					set {Essentials.mute.%arg 1%} to false
					broadcast "{@Essentials-unmute-broadcast}"
					stop
				if {Essentials.mute.%arg 1%} is false:
					send "{@Essentials-unmute-unmute-already}" to player
					stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to player
				stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-unmute-none-arguments}" to console
				stop
			if arg 1 is online:
				if {Essentials.mute.%arg 1%} is true:
					set {Essentials.mute.seconds.%arg 1%} to false
					set {Essentials.mute.%arg 1%} to false
					broadcast "{@Essentials-unmute-broadcast}"
					stop
				if {Essentials.mute.%arg 1%} is false:
					send "{@Essentials-unmute-unmute-already}" to console
					stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to console
				stop

on command "/unmute":
	if sender is a player:
		if player has permission "essentials.unmute" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:unmute":
	if sender is a player:
		if player has permission "essentials.unmute" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /mute [<offline player>] [<number>] [<text>]:
	executable by: player and console
	aliases: essentials:mute
	description: &fEssentials command /mute !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-mute-none-arguments-one}" to player
				stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					if arg 2 is set:
						if {Essentials.mute.%arg 1%} is false:
							set {Essentials.mute.seconds.%arg 1%} to arg 2
							set {Essentials.mute.%arg 1%} to true
							broadcast "{@Essentials-mute-broadcast}"
							stop
						else:
							send "{@Essentials-mute-mute-already}" to player
							stop
					if arg 2 is not set:
						send "{@Essentials-mute-none-arguments-two}" to player
						stop
				else:
					send "{@Essentials-mute-for-me}" to player
					stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to player
				stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-mute-none-arguments-one}" to console
				stop
			if arg 1 is online:
				if arg 2 is set:
					if {Essentials.mute.%arg 1%} is false:
						set {Essentials.mute.seconds.%arg 1%} to arg 2
						set {Essentials.mute.%arg 1%} to true
						broadcast "{@Essentials-mute-broadcast}"
						stop
					else:
						send "{@Essentials-mute-mute-already}" to console
						stop
				if arg 2 is not set:
					send "{@Essentials-mute-none-arguments-two}" to console
					stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to console
				stop

on chat:
	if sender doesn't have permission "essentials.chat.bypass" or "essentials.*" or "essentials.chat.*":
		if {Essentials.chat.use} is not set:
			if sender doesn't have permission "essentials.chat.color" or "essentials.*" or "essentials.chat.*":
				if {@Essentials-chat-format-use} is true:
					if {Essentials.mute.seconds.%player%} is more than 0:
						cancel event
						send "{@Essentials-chat-mute-message}" to player
						stop
					else:
						cancel event
						broadcast "{@Essentials-chat-format-msg-no-color}"
						stop
				else:
					if {Essentials.mute.seconds.%player%} is more than 0:
						cancel event
						send "{@Essentials-chat-mute-message}" to player
						stop
					else:
						stop
			else:
				if {@Essentials-chat-format-use} is true:
					if {Essentials.mute.seconds.%player%} is more than 0:
						cancel event
						send "{@Essentials-chat-mute-message}" to player
						stop
					else:
						cancel event
						broadcast "{@Essentials-chat-format-msg-color}"
						stop
				else:
					if {Essentials.mute.seconds.%player%} is more than 0:
						cancel event
						send "{@Essentials-chat-mute-message}" to player
						stop
					else:
						stop
		if {Essentials.chat.use} is set:
			if sender doesn't have permission "essentials.chat.color" or "essentials.*" or "essentials.chat.*":
				cancel event
				send "{@Essentials-chat-disable-message-use}" to player
				stop
			else:
				cancel event
				send "{@Essentials-chat-disable-message-use}" to player
				stop
	else:
		if {Essentials.chat.use} is not set:
			if sender doesn't have permission "essentials.chat.color" or "essentials.*" or "essentials.chat.*":
				if {@Essentials-chat-format-use} is true:
					if {Essentials.mute.seconds.%player%} is more than 0:
						cancel event
						send "{@Essentials-chat-mute-message}" to player
						stop
					else:
						cancel event
						broadcast "{@Essentials-chat-format-msg-no-color}"
						stop
				else:
					if {Essentials.mute.seconds.%player%} is more than 0:
						cancel event
						send "{@Essentials-chat-mute-message}" to player
						stop
					else:
						stop
			else:
				if {@Essentials-chat-format-use} is true:
					if {Essentials.mute.seconds.%player%} is more than 0:
						cancel event
						send "{@Essentials-chat-mute-message}" to player
						stop
					else:
						cancel event
						broadcast "{@Essentials-chat-format-msg-color}"
						stop
				else:
					if {Essentials.mute.seconds.%player%} is more than 0:
						cancel event
						send "{@Essentials-chat-mute-message}" to player
						stop
					else:
						stop
		if {Essentials.chat.use} is set:
			if sender doesn't have permission "essentials.chat.color" or "essentials.*" or "essentials.chat.*":
				if {@Essentials-chat-format-use} is true:
					if {Essentials.mute.seconds.%player%} is more than 0:
						cancel event
						send "{@Essentials-chat-mute-message}" to player
						stop
					else:
						cancel event
						broadcast "{@Essentials-chat-format-msg-no-color}"
						stop
				else:
					if {Essentials.mute.seconds.%player%} is more than 0:
						cancel event
						send "{@Essentials-chat-mute-message}" to player
						stop
					else:
						stop
			else:
				if {@Essentials-chat-format-use} is true:
					if {Essentials.mute.seconds.%player%} is more than 0:
						cancel event
						send "{@Essentials-chat-mute-message}" to player
						stop
					else:
						cancel event
						broadcast "{@Essentials-chat-format-msg-color}"
						stop
				else:
					if {Essentials.mute.seconds.%player%} is more than 0:
						cancel event
						send "{@Essentials-chat-mute-message}" to player
						stop
					else:
						stop

every 1 second:
	loop all players:
		if {Essentials.mute.seconds.%loop-player%} is more than 0:
			remove 1 from {Essentials.mute.seconds.%loop-player%}
			stop
		else:
			set {Essentials.mute.%loop-player%} to false
			stop

on command "/mute":
	if sender is a player:
		if player has permission "essentials.mute" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:mute":
	if sender is a player:
		if player has permission "essentials.mute" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /speed [<text>] [<number>] [<text>]:
	executable by: player and console
	aliases: essentials:speed
	description: &fEssentials command /speed !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-speed-none-arguments-one}" to player
				stop
			if arg 1 is not "fly" or "walk" or "reset":
				send "{@Essentials-speed-none-arguments-one}" to player
				stop
			if arg 1 is "fly":
				if sender doesn't have permission "essentials.speed.fly" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					if arg 2 is set:
						set the player's fly speed to arg 2
						send "{@Essentials-speed-fly-modify}" to player
						stop
					if arg 2 is not set:
						send "{@Essentials-speed-none-arguments-two}" to player
						stop
			if arg 1 is "walk":
				if sender doesn't have permission "essentials.speed.walk" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					if arg 2 is set:
						set the player's walk speed to arg 2
						send "{@Essentials-speed-walk-modify}"
						stop
					if arg 2 is not set:
						send "{@Essentials-speed-none-arguments-two}" to player
						stop
			if arg 1 is "reset":
				if sender doesn't have permission "essentials.speed.reset" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					set the player's walk speed to 0.2
					set the player's fly speed to 0.1
					send "{@Essentials-speed-reset-modify}"
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on quit:
	set the player's walk speed to 0.2
	set the player's fly speed to 0.1
	stop

on command "/speed":
	if sender is a player:
		if player has permission "essentials.speed" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:speed":
	if sender is a player:
		if player has permission "essentials.speed" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /slap [<offline player>]:
	executable by: player and console
	aliases: essentials:day
	description: &fEssentials command /day !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-slap-none-arguments}" to player
				stop
			if arg 1 is online:
				push arg 1 backwards at speed 1
				send "{@Essentials-slap-to-player}" to arg 1
				send "{@Essentials-slap-to-player-admin}" to player
				stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/slap":
	if sender is a player:
		if player has permission "essentials.slap" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:slap":
	if sender is a player:
		if player has permission "essentials.slap" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /day [<text>]:
	executable by: player and console
	aliases: essentials:day
	description: &fEssentials command /day !
	trigger:
		if sender is a player:
			set time to 6:00
			send "{@Essentials-day}" to player
			stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/night":
	if sender is a player:
		if player has permission "essentials.night" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:night":
	if sender is a player:
		if player has permission "essentials.night" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /night [<text>]:
	executable by: player and console
	aliases: essentials:night
	description: &fEssentials command /night !
	trigger:
		if sender is a player:
			set time to 20:00
			send "{@Essentials-night}" to player
			stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/day":
	if sender is a player:
		if player has permission "essentials.day" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:day":
	if sender is a player:
		if player has permission "essentials.day" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /time [<text>] [<text>]:
	executable by: player and console
	aliases: essentials:time
	description: &fEssentials command /time !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-time-none-arguments-one}" to player
				stop
			if arg 1 is not "set":
				send "{@Essentials-time-none-arguments-one}" to player
				stop
			if arg 1 is "set":
				if arg 2 is not "day" or "night":
					send "{@Essentials-time-none-arguments-two}" to player
					stop
				if arg 2 is not set:
					send "{@Essentials-time-none-arguments-two}" to player
					stop
				if arg 2 is "day":
					if sender doesn't have permission "essentials.time.night" or "essentials.time.*" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						set time to 6:00
						send "{@Essentials-time-day}"
						stop
				if arg 2 is "night":
					if sender doesn't have permission "essentials.time.night" or "essentials.time.*" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						set time to 20:00
						send "{@Essentials-time-night}" to player
						stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/time":
	if sender is a player:
		if player has permission "essentials.time" or "essentials.time.*" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:time":
	if sender is a player:
		if player has permission "essentials.time" or "essentials.time.*" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

every {@Essentials-kick-afk-cooldown} seconds:
	loop all players:
		if {@Essentials-use-afk-cooldown} is true:
			if {Essentials.afk.%loop-player%} is set:
				kick loop-player because "{@Essentials.afk.kick.to-broadcast}"
				stop
			else:
				stop
		else:
			stop

command /afk [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:afk
	description: &fEssentials command /afk !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				if {Essentials.afk.%player%} is not set:
					broadcast "{@Essentials-afk-to-me-to-broadcast-to-on}"
					set {Essentials.afk.%player%} to true
					stop
				else:
					broadcast "{@Essentials-afk-to-me-to-broadcast-to-off}"
					delete {Essentials.afk.%player%}
					stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					if player doesn't have permission "essentials.afk.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						if {Essentials.afk.%arg 1%} is not set:
							broadcast "{@Essentials-afk-to-player-to-broadcast-to-on}"
							set {Essentials.afk.%arg 1%} to true
							stop
						else:
							broadcast "{@Essentials-afk-to-player-to-broadcast-to-off}"
							delete {Essentials.afk.%arg 1%}
							stop
				else:
					if player doesn't have permission "essentials.afk.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials.afk-for-me}" to player
						stop
			if arg 1 is offline:
				if player doesn't have permission "essentials.afk.others" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on quit:
	if {Essentials.afk.%player%} is set:
		broadcast "{@Essentials-afk-to-me-to-broadcast-to-off}"
		delete {Essentials.afk.%player%}
		stop
	else:
		stop

on flight toggle:
	if {Essentials.afk.%player%} is set:
		broadcast "{@Essentials-afk-to-me-to-broadcast-to-off}"
		delete {Essentials.afk.%player%}
		stop
	else:
		stop

on any movement:
	if {Essentials.afk.%player%} is set:
		broadcast "{@Essentials-afk-to-me-to-broadcast-to-off}"
		delete {Essentials.afk.%player%}
		stop
	else:
		stop

on join:
	if {Essentials.afk.%player%} is set:
		broadcast "{@Essentials-afk-to-me-to-broadcast-to-off}"
		delete {Essentials.afk.%player%}
		stop
	else:
		stop

on build:
	if {Essentials.afk.%player%} is set:
		broadcast "{@Essentials-afk-to-me-to-broadcast-to-off}"
		delete {Essentials.afk.%player%}
		stop
	else:
		stop

on break:
	if {Essentials.afk.%player%} is set:
		broadcast "{@Essentials-afk-to-me-to-broadcast-to-off}"
		delete {Essentials.afk.%player%}
		stop
	else:
		stop

on chat:
	if {Essentials.afk.%player%} is set:
		broadcast "{@Essentials-afk-to-me-to-broadcast-to-off}"
		delete {Essentials.afk.%player%}
		stop
	else:
		stop


on command "/afk":
	if sender is a player:
		if player has permission "essentials.afk" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:afk":
	if sender is a player:
		if player has permission "essentials.afk" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /enderchest [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:enderchest, ec, essentials:ec
	description: &fEssentials command /enderchest !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				open player's ender chest to player
				send "{@Essentials-enderchest-open-to-me}" to player
				stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					if player doesn't have permission "essentials.enderchest.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						open the arg 1's ender chest for player
						send "{@Essentials-enderchest-open-to-player}" to player
						stop
				if arg 1 is "%player%":
					if player doesn't have permission "essentials.enderchest.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-enderchest-enderchest-open-for-me}" to player
						stop
			if arg 1 is offline:
				if player doesn't have permission "essentials.enderchest.others" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/ec":
	if sender is a player:
		if player has permission "essentials.enderchest" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:ec":
	if sender is a player:
		if player has permission "essentials.enderchest" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/enderchest":
	if sender is a player:
		if player has permission "essentials.enderchest" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:enderchest":
	if sender is a player:
		if player has permission "essentials.enderchest" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /skull [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:skull, head, playerhead, essentials:head, essentials:playerhead
	description: &fEssentials command /skull !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-skull-none-arguments}" to player
				stop
			if arg 1 is set:
				give skull of arg 1 to player
				send "{@Essentials-skull-give}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/head":
	if sender is a player:
		if player has permission "essentials.skull" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:head":
	if sender is a player:
		if player has permission "essentials.skull" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/playerhead":
	if sender is a player:
		if player has permission "essentials.skull" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:playerhead":
	if sender is a player:
		if player has permission "essentials.skull" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/skull":
	if sender is a player:
		if player has permission "essentials.skull" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:skull":
	if sender is a player:
		if player has permission "essentials.skull" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /delwarp [<text>]:
	executable by: player and console
	aliases: essentials:delwarp
	description: &fEssentials command /delwarp !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-delwarp-none-arguments}" to player
				stop
			if arg 1 is set:
				if {Essentials.warp.name.%arg 1%} is not set:
					send "{@Essentials-delwarp-is-delete}" to player
					stop
				else:
					delete {Essentials.warp.name.%arg 1%}
					send "{@Essentials-delwarp-delete}" to player
					remove arg 1 from {Essentials.warp.list::*}
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/delwarp":
	if sender is a player:
		if player has permission "essentials.delwarp" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:delwarp":
	if sender is a player:
		if player has permission "essentials.delwarp" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /setwarp [<text>]:
	executable by: player and console
	aliases: essentials:setwarp
	description: &fEssentials command /setwarp !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-setwarp-none-arguments}" to player
				stop
			if arg 1 is set:
				if {Essentials.warp.name.%arg 1%} is not set:
					set {Essentials.warp.name.%arg 1%} to location of player
					send "{@Essentials-setwarp-create}" to player
					add arg 1 to {Essentials.warp.list::*}
					stop
				else:
					send "{@Essentials-setwarp-is-create}" to player
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/setwarp":
	if sender is a player:
		if player has permission "essentials.setwarp" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:setwarp":
	if sender is a player:
		if player has permission "essentials.setwarp" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /warp [<text>] [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:warp
	description: &fEssentials command /warp !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-warp-none-arguments-one}" to player
				stop
			if arg 1 is set:
				if player doesn't have permission "essentials.warp.%arg 1%" or "essentials.warp.*" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					if {@Essentials-use-warp-cooldown} is true:
						if arg 2 is not set:
							if player doesn't have permission "essentials.warp.bypass" or "essentials.warp.*" or "essentials.*":
								if {Essentials.warp.name.%arg 1%} is not set:
									send "{@Essentials-warp-no-warps}" to player
									stop
								else:
									set {Essentials.back.use.%player%} to location of player
									send "{@Essentials-warp-teleport-player-coodown}" to player
									wait {@Essentials-teleport-warp-cooldown} seconds
									teleport player to {Essentials.warp.name.%arg 1%}
									send "{@Essentials-warp-teleport-to-me}" to player
									stop
							else:
								if {Essentials.warp.name.%arg 1%} is not set:
									send "{@Essentials-warp-no-warps}" to player
									stop
								else:
									set {Essentials.back.use.%player%} to location of player
									teleport player to {Essentials.warp.name.%arg 1%}
									send "{@Essentials-warp-teleport-to-me}" to player
									stop
						if arg 2 is online:
							if arg 2 is not "%player%":
								if {Essentials.warp.name.%arg 1%} is not set:
									send "{@Essentials-warp-no-warps}" to player
									stop
								else:
									set {Essentials.back.use.%arg 2%} to location of arg 2
									teleport arg 2 to {Essentials.warp.name.%arg 1%}
									send "{@Essentials-warp-teleport-to-player}" to arg 2
									send "{@Essentials-warp-teleport-to-player-admin}" to player
									stop
							if arg 2 is "%player%":
								send "{@Essentials-warp-teleport-for-me}" to player
								stop
					else:
						if arg 2 is not set:
							if {Essentials.warp.name.%arg 1%} is not set:
								send "{@Essentials-warp-no-warps}" to player
								stop
							else:
								set {Essentials.back.use.%player%} to location of player
								teleport player to {Essentials.warp.name.%arg 1%}
								send "{@Essentials-warp-teleport-to-me}" to player
								stop
						if arg 2 is online:
							if arg 2 is not "%player%":
								if {Essentials.warp.name.%arg 1%} is not set:
									send "{@Essentials-warp-no-warps}" to player
									stop
								else:
									set {Essentials.back.use.%arg 2%} to location of arg 2
									teleport arg 2 to {Essentials.warp.name.%arg 1%}
									send "{@Essentials-warp-teleport-to-player}" to arg 2
									send "{@Essentials-warp-teleport-to-player-admin}" to player
									stop
							if arg 2 is "%player%":
								send "{@Essentials-warp-teleport-for-me}" to player
								stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/warp":
	if sender is a player:
		if player has permission "essentials.warp" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:warp":
	if sender is a player:
		if player has permission "essentials.warp" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /warps [<text>]:
	executable by: player and console
	aliases: essentials:warps
	description: &fEssentials command /warps !
	trigger:
		if sender is a player:
			if {Essentials.warp.list::*} is not set:
				send "{@Essentials-warps-no-warp-list}" to player
				stop
			else:
				send "{@Essentials-warps-list}" to player
				stop
		if sender is console:
			if {Essentials.warp.list::*} is not set:
				send "{@Essentials-warps-no-warp-list}" to console
				stop
			else:
				send "{@Essentials-warps-list}" to console
				stop

on command "/warps":
	if sender is a player:
		if player has permission "essentials.warps" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:warps":
	if sender is a player:
		if player has permission "essentials.warps" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /msg [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:msg, m, t, whisper, essentials:whisper, essentials:m, essentials:t
	description: &fEssentials command /msg  !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-msg-none-arguments-one}" to player
				stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					if arg 2 is not set:
						send "{@Essentials-msg-none-arguments-two}" to player
						stop
					if arg 2 is set:
						if player doesn't have permission "essentials.msg.color" or "essentials.*":
							if {Essentials.ignore.%player%.%arg 1%} is true:
								send "{@Essentials-msg-ignore-to-player}" to player
								stop
							else:
								send "{@Essentials-msg-msg-to-me-to-color}" to player
								send "{@Essentials-msg-msg-to-player-to-no-color}" to arg 1
								stop
						else:
							if {Essentials.ignore.%player%.%arg 1%} is true:
								send "{@Essentials-msg-ignore-to-player}" to player
								stop
							else:
								send "{@Essentials-msg-msg-to-me-to-color}" to player
								send "{@Essentials-msg-msg-to-player-to-color}" to arg 1
								stop
				else:
					send "{@Essentials-msg-for-me}" to player
					stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/whisper":
	if sender is a player:
		if player has permission "essentials.msg" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:whisper":
	if sender is a player:
		if player has permission "essentials.msg" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/t":
	if sender is a player:
		if player has permission "essentials.msg" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:t":
	if sender is a player:
		if player has permission "essentials.msg" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/m":
	if sender is a player:
		if player has permission "essentials.msg" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:m":
	if sender is a player:
		if player has permission "essentials.msg" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/msg":
	if sender is a player:
		if player has permission "essentials.msg" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:msg":
	if sender is a player:
		if player has permission "essentials.msg" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /ignore [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:ignore
	description: &fEssentials command /ignore !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-ignore-none-arguments}" to player
				stop
			if arg 1 is online:
				if arg 1 is not "%player%":
					if {Essentials.ignore.%player%.%arg 1%} is false:
						set {Essentials.ignore.%player%.%arg 1%} to true
						set {Essentials.ignore.%arg 1%.%player%} to true
						send "{@Essentials-ignore-to-player-to-on}" to player
						stop
					else:
						send "{@Essentials-ignore-to-player-to-off}" to player
						set {Essentials.ignore.%player%.%arg 1%} to false
						set {Essentials.ignore.%arg 1%.%player%} to false
						stop
				if arg 1 is "%player%":
					send "{@Essentials-ignore-ignore-for-me}" to player
					stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/ignore":
	if sender is a player:
		if player has permission "essentials.ignore" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:ignore":
	if sender is a player:
		if player has permission "essentials.ignore" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /tphere [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:tphere
	description: &fEssentials command /tphere !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-tphere-none-arguments}" to player
				stop
			if arg 1 is online:
				set {Essentials.back.use.%arg 1%} to location of arg 1
				teleport arg 1 to player
				send "{@Essentials-tphere-to-player}" to arg 1
				send "{@Essentials-tphere-to-player-admin}" to player
				stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/tphere":
	if sender is a player:
		if player has permission "essentials.tphere" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:tphere":
	if sender is a player:
		if player has permission "essentials.tphere" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /freeze [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:freeze
	description: &fEssentials command /freeze !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-freeze-none-arguments}" to player
				stop
			if arg 1 is online:
				if {Essentials.freeze.%arg 1%} is not set:
					set {Essentials.freeze.%arg 1%} to true
					send "{@Essentials-freeze-to-player-to-on}" to arg 1
					send "{@Essentials-freeze-to-player-admin-to-on}" to player
					stop
				else:
					delete {Essentials.freeze.%arg 1%}
					send "{@Essentials-freeze-to-player-to-off}" to arg 1
					send "{@Essentials-freeze-to-player-admin-to-off}" to player
					stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on any movement:
	if {Essentials.freeze.%player%} is true:
		cancel event
		stop

on build:
	if {Essentials.freeze.%player%} is true:
		cancel event
		stop

on break:
	if {Essentials.freeze.%player%} is true:
		cancel event
		stop

on drop:
	if {Essentials.freeze.%player%} is true:
		cancel event
		stop

on damage:
	if {Essentials.freeze.%victim%} is true:
		cancel event
		stop

on join:
	delete {Essentials.freeze.%player%}
	stop

on command "/freeze":
	if sender is a player:
		if player has permission "essentials.freeze" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:freeze":
	if sender is a player:
		if player has permission "essentials.freeze" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /kick [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:kick
	description: &fEssentials command /kick !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-kick-none-arguments-one}" to player
				stop
			if arg 1 is online:
				if arg 2 is set:
					broadcast "{@Essentials-kick-broadcast}"
					kick arg 1 because "{@Essentials-kick-to-player}"
					stop
				if arg 2 is not set:
					send "{@Essentials-kick-none-arguments-two}" to player
					stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to player
				stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-if-sender-is-console-use-commands}" to console
				stop
			if arg 1 is online:
				if arg 2 is set:
					broadcast "{@Essentials-kick-broadcast}"
					kick arg 1 because "{@Essentials-kick-to-player}"
					stop
				if arg 2 is not set:
					send "{@Essentials-if-sender-is-console-use-commands}" to console
					stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to console
				stop

on command "/kick":
	if sender is a player:
		if player has permission "essentials.kick" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:kick":
	if sender is a player:
		if player has permission "essentials.kick" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /helpop [<text>]:
	executable by: player and console
	aliases: essentials:helpop
	description: &fEssentials command /helpop !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-helpop-none-arguments}" to player
				stop
			if arg 1 is set:
				loop all players:
					if loop-players has permission "essentials.helpop.receive" or "essentials.*":
						send "{@Essentials-helpop-message}" to loop-player
						stop
					else:
						stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/helpop":
	if sender is a player:
		if player has permission "essentials.helpop" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:helpop":
	if sender is a player:
		if player has permission "essentials.helpop" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /gm [<text>] [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:gamemode, essentials:gm, gamemode
	description: &fEssentials command /gamemode !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-gamemode-none-arguments}" to player
				stop
			if arg 1 is not "0" or "1" or "2" or "3" or "survival" or "creative" or "adventure" or "spectator":
				send "{@Essentials-gamemode-none-arguments}" to player
				stop
			if arg 1 is set:
				if arg 1 is "0" or "survival":
					if arg 2 is not set:
						if player doesn't have permission "essentials.gamemode.survival" or "essentials.gamemode.*" or "essentials.*":
							send "{Essentials-player-has-not-permission-use-commands}" to player
							stop
						else:
							if player's gamemode is not survival:
								send "{@Essentials-gamemode-survival-to-me}" to player
								set gamemode of player to survival
								delete {Essentials.fly.%player%}
								stop
							if player's gamemode is survival:
								send "{@Essentials-gamemode-survival-to-me-gamemode-is-set}" to player
								stop
					if arg 2 is online:
						if arg 2 is not "%player%":
							if player doesn't have permission "essentials.gamemode.survival.others" or "essentials.gamemode.*" or "essentials.*":
								send "{Essentials-player-has-not-permission-use-commands}" to player
								stop
							else:
								if arg 2's gamemode is not survival:
									send "{@Essentials-gamemode-survival-to-player-admin}" to player
									send "{@Essentials-gamemode-survival-to-player}" to arg 2
									set gamemode of arg 2 to survival
									delete {Essentials.fly.%arg 2%}
									stop
								if arg 2's gamemode is survival:
									send "{@Essentials-gamemode-survival-to-player-admin-gamemode-is-set}" to player
									stop
						else:
							if player doesn't have permission "essentials.gamemode.survival.others" or "essentials.gamemode.*" or "essentials.*":
								send "{Essentials-player-has-not-permission-use-commands}" to player
								stop
							else:
								send "{@Essentials-gamemode-player-of-me}" to arg 2
								stop
					if arg 2 is offline:
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
				if arg 1 is "1" or "creative":
					if arg 2 is not set:
						if player doesn't have permission "essentials.gamemode.creative" or "essentials.gamemode.*" or "essentials.*":
							send "{Essentials-player-has-not-permission-use-commands}" to player
							stop
						else:
							if player's gamemode is not creative:
								send "{@Essentials-gamemode-creative-to-me}" to player
								set gamemode of player to creative
								set {Essentials.fly.%player%} to true
								stop
							if player's gamemode is creative:
								send "{@Essentials-gamemode-creative-to-me-gamemode-is-set}" to player
								stop
					if arg 2 is online:
						if arg 2 is not "%player%":
							if player doesn't have permission "essentials.gamemode.creative.others" or "essentials.gamemode.*" or "essentials.*":
								send "{Essentials-player-has-not-permission-use-commands}" to player
								stop
							else:
								if arg 2's gamemode is not creative:
									send "{@Essentials-gamemode-creative-to-player-admin}" to player
									send "{@Essentials-gamemode-creative-to-player}" to arg 2
									set gamemode of arg 2 to creative
									set {Essentials.fly.%arg 2%} to true
									stop
								if arg 2's gamemode is creative:
									send "{@Essentials-gamemode-creative-to-player-admin-gamemode-is-set}" to player
									stop
						else:
							if player doesn't have permission "essentials.gamemode.creative.others" or "essentials.gamemode.*" or "essentials.*":
								send "{Essentials-player-has-not-permission-use-commands}" to player
								stop
							else:
								send "{@Essentials-gamemode-player-of-me}" to arg 2
								stop
					if arg 2 is offline:
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
				if arg 1 is "2" or "adventure":
					if arg 2 is not set:
						if player doesn't have permission "essentials.gamemode.adventure" or "essentials.gamemode.*" or "essentials.*":
							send "{Essentials-player-has-not-permission-use-commands}" to player
							stop
						else:
							if player's gamemode is not adventure:
								send "{@Essentials-gamemode-adventure-to-me}" to player
								set gamemode of player to adventure
								delete {Essentials.fly.%player%}
								stop
							if player's gamemode is adventure:
								send "{@Essentials-gamemode-adventure-to-me-gamemode-is-set}" to player
								stop
					if arg 2 is online:
						if arg 2 is not "%player%":
							if player doesn't have permission "essentials.gamemode.adventure.others" or "essentials.gamemode.*" or "essentials.*":
								send "{Essentials-player-has-not-permission-use-commands}" to player
								stop
							else:
								if arg 2's gamemode is not adventure:
									send "{@Essentials-gamemode-adventure-to-player-admin}" to player
									send "{@Essentials-gamemode-adventure-to-player}" to arg 2
									set gamemode of arg 2 to adventure
									delete {Essentials.fly.%arg 2%}
									stop
								if arg 2's gamemode is adventure:
									send "{@Essentials-gamemode-adventure-to-player-admin-gamemode-is-set}" to player
									stop
						else:
							if player doesn't have permission "essentials.gamemode.adventure.others" or "essentials.gamemode.*" or "essentials.*":
								send "{Essentials-player-has-not-permission-use-commands}" to player
								stop
							else:
								send "{@Essentials-gamemode-player-of-me}" to arg 2
								stop
					if arg 2 is offline:
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
				if arg 1 is "3" or "spectator":
					if arg 2 is not set:
						if player doesn't have permission "essentials.gamemode.spectator" or "essentials.gamemode.*" or "essentials.*":
							send "{Essentials-player-has-not-permission-use-commands}" to player
							stop
						else:
							if player's gamemode is not spectator:
								send "{@Essentials-gamemode-spectator-to-me}" to player
								set gamemode of player to spectator
								set {Essentials.fly.%player%} to true
								stop
							if player's gamemode is spectator:
								send "{@Essentials-gamemode-spectator-to-me-gamemode-is-set}" to player
								stop
					if arg 2 is online:
						if arg 2 is not "%player%":
							if player doesn't have permission "essentials.gamemode.spectator.others" or "essentials.gamemode.*" or "essentials.*":
								send "{Essentials-player-has-not-permission-use-commands}" to player
								stop
							else:
								if arg 2's gamemode is not spectator:
									send "{@Essentials-gamemode-spectator-to-player-admin}" to player
									send "{@Essentials-gamemode-spectator-to-player}" to arg 2
									set {Essentials.fly.%arg 2%} to true
									set gamemode of arg 2 to spectator
									stop
								if arg 2's gamemode is spectator:
									send "{@Essentials-gamemode-spectator-to-player-admin-gamemode-is-set}" to player
									stop
						else:
							if player doesn't have permission "essentials.gamemode.spectator.others" or "essentials.gamemode.*" or "essentials.*":
								send "{Essentials-player-has-not-permission-use-commands}" to player
								stop
							else:
								send "{@Essentials-gamemode-player-of-me}" to arg 2
								stop
					if arg 2 is offline:
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-gamemode-none-arguments}" to console
				stop
			if arg 1 is not "0" or "1" or "2" or "3" or "survival" or "creative" or "adventure" or "spectator":
				send "{@Essentials-gamemode-none-arguments}" to console
				stop
			if arg 1 is set:
				if arg 1 is "0" or "survival":
					if arg 2 is not set:
						send "{@Essentials-if-player-is-not-set-to-argument}" to console
						stop
					if arg 2 is online:
						if arg 2's gamemode is not survival:
							send "{@Essentials-gamemode-survival-to-player-admin}" to console
							send "{@Essentials-gamemode-survival-to-player}" to arg 2
							set gamemode of arg 2 to survival
							delete {Essentials.fly.%arg 2%}
							stop
						if arg 2's gamemode is survival:
							send "{@Essentials-gamemode-survival-to-player-admin-gamemode-is-set}" to console
							stop
					if arg 2 is offline:
						send "{@Essentials-if-player-is-not-set-to-argument}" to console
						stop
				if arg 1 is "1" or "creative":
					if arg 2 is not set:
						send "{@Essentials-if-player-is-not-set-to-argument}" to console
						stop
					if arg 2 is online:
						if arg 2's gamemode is not creative:
							send "{@Essentials-gamemode-creative-to-player-admin}" to console
							send "{@Essentials-gamemode-creative-to-player}" to arg 2
							set gamemode of arg 2 to creative
							delete {Essentials.fly.%arg 2%}
							stop
						if arg 2's gamemode is creative:
							send "{@Essentials-gamemode-creative-to-player-admin-gamemode-is-set}" to console
							stop
					if arg 2 is offline:
						send "{@Essentials-if-player-is-not-set-to-argument}" to console
						stop
				if arg 1 is "2" or "adventure":
					if arg 2 is not set:
						send "{@Essentials-if-player-is-not-set-to-argument}" to console
						stop
					if arg 2 is online:
						if arg 2's gamemode is not adventure:
							send "{@Essentials-gamemode-adventure-to-player-admin}" to console
							send "{@Essentials-gamemode-adventure-to-player}" to arg 2
							set gamemode of arg 2 to adventure
							delete {Essentials.fly.%arg 2%}
							stop
						if arg 2's gamemode is adventure:
							send "{@Essentials-gamemode-adventure-to-player-admin-gamemode-is-set}" to console
							stop
					if arg 2 is offline:
						send "{@Essentials-if-player-is-not-set-to-argument}" to console
						stop
				if arg 1 is "3" or "spectator":
					if arg 2 is not set:
						send "{@Essentials-if-player-is-not-set-to-argument}" to console
						stop
					if arg 2 is online:
						if arg 2's gamemode is not spectator:
							send "{@Essentials-gamemode-spectator-to-player-admin}" to console
							send "{@Essentials-gamemode-spectator-to-player}" to arg 2
							set gamemode of arg 2 to spectator
							delete {Essentials.fly.%arg 2%}
							stop
						if arg 2's gamemode is spectator:
							send "{@Essentials-gamemode-spectator-to-player-admin-gamemode-is-set}" to console
							stop
					if arg 2 is offline:
						send "{@Essentials-if-player-is-not-set-to-argument}" to console
						stop

on command "/gm":
	if sender is a player:
		if player has permission "essentials.gamemode" or "essentials.gamemode.*" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:gm":
	if sender is a player:
		if player has permission "essentials.gamemode" or "essentials.gamemode.*" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/gamemode":
	if sender is a player:
		if player has permission "essentials.gamemode" or "essentials.gamemode.*" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:gamemode":
	if sender is a player:
		if player has permission "essentials.gamemode" or "essentials.gamemode.*" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /me [<text>]:
	executable by: player and console
	aliases: essentials:me
	description: &fEssentials command /me !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-me-none-arguments}" to player
				stop
			if arg 1 is set:
				if player doesn't have permission "essentials.me.color" or "essentials.*":
					broadcast "{@Essentials-me-message-no-color}"
					stop
				else:
					broadcast "{@Essentials-me-message-color}"
					stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/me":
	if sender is a player:
		if player has permission "essentials.me" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:me":
	if sender is a player:
		if player has permission "essentials.me" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /fly [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:fly
	description: &fEssentials command /fly !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				if {Essentials.fly.%player%} is not set:
					send "{@Essentials-fly-fly-to-me-is-on}" to player
					set player's flight mode to true
					set {Essentials.fly.%player%} to true
					stop
				if {Essentials.fly.%player%} is set:
					send "{@Essentials-fly-fly-to-me-is-off}" to player
					set player's flight mode to false
					delete {Essentials.fly.%player%}
					stop
			if arg 1 is online:
				if arg 1 is not "%player%": 
					if player doesn't have permission "essentials.fly.others" or "essentials.*":
						send "{Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						if {Essentials.fly.%arg 1%} is not set:
							send "{@Essentials-fly-fly-to-player-admin-is-on}" to player
							send "{@Essentials-fly-fly-to-player-is-on}" to arg 1
							set arg 1's flight mode to true
							set {Essentials.fly.%arg 1%} to true
							stop
						if {Essentials.fly.%arg 1%} is set:
							send "{@Essentials-fly-fly-to-player-admin-is-off}" to player
							send "{@Essentials-fly-fly-to-player-is-off}" to arg 1
							set arg 1's flight mode to false
							delete {Essentials.fly.%arg 1%}
							stop
				else:
					if player doesn't have permission "essentials.fly.others" or "essentials.*":
						send "{Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-fly-fly-player-of-me}" to player
						stop
			if arg 1 is offline:
				if player doesn't have permission "essentials.fly.others" or "essentials.*":
					send "{Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-if-sender-is-console-use-commands}" to console
				stop
			if arg 1 is online:
				if {Essentials.fly.%arg 1%} is not set:
					send "{@Essentials-fly-fly-to-player-admin-is-on}" to console
					send "{@Essentials-fly-fly-to-player-is-on}" to arg 1
					set arg 1's flight mode to true
					set {Essentials.fly.%arg 1%} to true
					stop
				if {Essentials.fly.%arg 1%} is set:
					send "{@Essentials-fly-fly-to-player-admin-is-off}" to console
					send "{@Essentials-fly-fly-to-player-is-off}" to arg 1
					set arg 1's flight mode to false
					delete {Essentials.fly.%arg 1%}
					stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to console
				stop

on join:
	if gamemode of player is survival and adventure:
		delete {Essentials.fly.%player%}
		set player's flight mode to false
		stop

on command "/fly":
	if sender is a player:
		if player has permission "essentials.fly" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:fly":
	if sender is a player:
		if player has permission "essentials.fly" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on death:
	if {@Essentials-death-message} is true:
		set {Essentials.back.use.%player%} to location of player
		set death message to "{@Essentials-death-message-use}"
		stop
	else:
		stop

on respawn:
	if {@Essentials-death-teleport-to-spawn} is true:
		teleport player to {Essentials.spawn.point}
		stop
	else:
		stop

command /tpall [<text>]:
	executable by: player and console
	aliases: essentials:tpall
	description: &fEssentials command /tpall !
	trigger:
		if sender is a player:
			loop all players:
				set {Essentials.back.use.%loop-player%} to location of loop-player
				teleport all players to player
				send "{@Essentials-tpall-teleport-to-player-admin}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/tpall":
	if sender is a player:
		if player has permission "essentials.tpall" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:tpall":
	if sender is a player:
		if player has permission "essentials.tpall" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /clearinventory [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:clearinventory, clear, essentials:clear, clearinv, essentials:clearinv
	description: &fEssentials command /clearinventory !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				clear player's inventory
				send "{@Essentials-clearinventory-clear-to-me}" to player
				stop
			if arg 1 is online:
				if player doesn't have permission "essentials.clearinventory.others" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					if player is not "%arg 1%":
						clear arg 1's inventory
						send "{@Essentials-clearinventory-clear-to-player}" to arg 1
						send "{@Essentials-clearinventory-clear-to-player-admin}" to player
						stop
					else:
						send "{@Essentials-clearinventory-clear-player-of-me}" to player
						stop
			if arg 1 is offline:
				if player doesn't have permission "essentials.clearinventory.others" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-if-player-is-not-set-to-argument}" to console
				stop
			if arg 1 is online:
				clear arg 1's inventory
				send "{@Essentials-clearinventory-clear-to-player}" to arg 1
				send "{@Essentials-clearinventory-clear-to-player-admin}" to console
				stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to console
				stop

on command "/clearinv":
	if sender is a player:
		if player has permission "essentials.clearinventory" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:clearinv":
	if sender is a player:
		if player has permission "essentials.clearinventory" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/clear":
	if sender is a player:
		if player has permission "essentials.clearinventory" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:clear":
	if sender is a player:
		if player has permission "essentials.clearinventory" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/clearinventory":
	if sender is a player:
		if player has permission "essentials.clearinventory" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:clearinventory":
	if sender is a player:
		if player has permission "essentials.clearinventory" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /suicide [<text>]:
	executable by: player and console
	aliases: essentials:suicide
	description: &fEssentials command /suicide !
	trigger:
		if sender is a player:
			set {Essentials.back.use.%player%} to location of player
			kill player
			broadcast "{@Essentials-suicide-suicide}"
			stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/suicide":
	if sender is a player:
		if player has permission "essentials.suicide" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:suicide":
	if sender is a player:
		if player has permission "essentials.suicide" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /broadcast [<text>]:
	executable by: player and console
	aliases: essentials:broadcast
	description: &fEssentials command /broadcast !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-broadcast-none-arguments}"
				stop
			else:
				if player doesn't have permission "essentials.broadcast.color" or "essentials.*":
					broadcast "{@Essentials-broadcast-message-no-color}"
					stop
				else:
					broadcast "{@Essentials-broadcast-message-color}"
					stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-broadcast-none-arguments}"
				stop
			else:
				broadcast "{@Essentials-broadcast-message-color}"
				stop

on command "/broadcast":
	if sender is a player:
		if player has permission "essentials.broadcast" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:broadcast":
	if sender is a player:
		if player has permission "essentials.broadcast" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /tp [<offline player>] [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:tp
	description: &fEssentials command /tp !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-tp-none-arguments}" to player
				stop
			if arg 1 is online:
				if arg 2 is not set:
					if arg 1 is not "%player%":
						set {Essentials.back.use.%player%} to location of player
						teleport player to arg 1
						send "{@Essentials-tp-teleport-player}" to player
						stop
					else:
						send "{@Essentials-tp-teleport-player-of-me}" to player
						stop
				if arg 2 is online:
					if player doesn't have permission "essentials.tp.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						set {Essentials.back.use.%arg 1%} to location of arg 1
						teleport arg 1 to arg 2
						send "{@Essentials-tp-teleport-player}" to arg 1
						send "{@Essentials-tp-teleport-player-admin}" to player
						stop
				if arg 2 is offline:
					if player doesn't have permission "essentials.tp.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/tp":
	if sender is a player:
		if player has permission "essentials.tp" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:tp":
	if sender is a player:
		if player has permission "essentials.tp" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on chat:
	if sender doesn't have permission "essentials.chat.color" or "essentials.*":
		stop
	else:
		replace all "&" in the message with "§"
		stop

on first join:
	if {@Essentials-firstjoin-message} is true:
		broadcast "{@Essentials-firstjoin-message-use}"
		stop
	else:
		stop

on join: 
	if {@Essentials-join-teleport-to-spawn} is true:
		teleport player to {Essentials.spawn.point}
		stop
	else:
		stop

on join:
	if {@Essentials-join-message} is true:
		set join message to "{@Essentials-join-message-use}"
		stop
	else:
		stop
on quit:
	if {@Essentials-join-message} is true:
		set quit message to "{@Essentials-quit-message-use}"
		stop
	else:
		stop

on build:
	if player doesn't have permission "essentials.build" or "essentials.*":
		cancel event
		send "{@Essentials-antibuild-use}" to player
		stop
	else:
		stop

on break:
	if player doesn't have permission "essentials.build" or "essentials.*":
		cancel event
		send "{@Essentials-antibuild-use}" to player
		stop
	else:
		stop

command /essentials [<text>]:
	executable by: player and console
	aliases: essentials:essentials, ess, essentials:ess
	description: &fEssentials command /essentials !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-essentials-none-arguments}" to player
				stop
			if arg 1 is not "reload" or "info":
				send "{@Essentials-essentials-none-arguments}" to player
				stop
			if arg 1 is "reload":
				make console execute command "/sk reload essentials"
				send "{@Essentials-essentials-reload}" to player
				stop
			if arg 1 is "info":
				send "{@Essentials-essentials-infos}" to player
				stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-essentials-none-arguments}" to console
				stop
			if arg 1 is not "reload" or "info":
				send "{@Essentials-essentials-none-arguments}" to console
				stop
			if arg 1 is "reload":
				make console execute command "/sk reload essentials"
				send "{@Essentials-essentials-reload}" to console
				stop
			if arg 1 is "info":
				send "{@Essentials-essentials-infos}" to console
				stop

on command "/essentials":
	if sender is a player:
		if player has permission "essentials.admin" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:ess":
	if sender is a player:
		if player has permission "essentials.admin" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/ess":
	if sender is a player:
		if player has permission "essentials.admin" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:essentials":
	if sender is a player:
		if player has permission "essentials.admin" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /feed [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:feed
	description: &fEssentials command /feed !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-feed-feed-to-me}" to player
				feed player
				stop
			if arg 1 is online:
				if arg 1 is "%player%":
					send "{@Essentials-feed-feed-of-me}" to player
					stop
				else:
					if player doesn't have permission "essentials.feed.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-feed-feed-to-player}" to arg 1
						send "{@Essentials-feed-feed-to-player-admin}" to player
						feed arg 1
						stop
			if arg 1 is offline:
				if player doesn't have permission "essentials.feed.others" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-if-player-is-not-set-to-argument}" to console
				stop
			if arg 1 is online:
				send "{@Essentials-feed-feed-to-player}" to arg 1
				send "{@Essentials-feed-feed-to-player-admin}" to console
				feed arg 1
				stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to console
				stop

on command "/feed":
	if sender is a player:
		if player has permission "essentials.feed" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:feed":
	if sender is a player:
		if player has permission "essentials.feed" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /heal [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:heal
	description: &fEssentials command /heal !
	trigger:
		if sender is a player:
			if arg 1 is not set:
				send "{@Essentials-heal-heal-to-me}" to player
				heal player
				stop
			if arg 1 is online:
				if arg 1 is "%player%":
					send "{@Essentials-heal-heal-of-me}" to player
					stop
				else:
					if player doesn't have permission "essentials.heal.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-heal-heal-to-player}" to arg 1
						send "{@Essentials-heal-heal-to-player-admin}" to player
						heal arg 1
						stop
			if arg 1 is offline:
				if player doesn't have permission "essentials.heal.others" or "essentials.*":
					send "{@Essentials-player-has-not-permission-use-commands}" to player
					stop
				else:
					send "{@Essentials-if-player-is-not-set-to-argument}" to player
					stop
		if sender is console:
			if arg 1 is not set:
				send "{@Essentials-if-player-is-not-set-to-argument}" to console
				stop
			if arg 1 is online:
				send "{@Essentials-heal-heal-to-player}" to arg 1
				send "{@Essentials-heal-heal-to-player-admin}" to console
				heal arg 1
				stop
			if arg 1 is offline:
				send "{@Essentials-if-player-is-not-set-to-argument}" to console
				stop

on command "/heal":
	if sender is a player:
		if player has permission "essentials.heal" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:heal":
	if sender is a player:
		if player has permission "essentials.heal" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /spawn [<offline player>] [<text>]:
	executable by: player and console
	aliases: essentials:spawn
	description: &fEssentials command /spawn !
	trigger:
		if sender is a player:
			if {Essentials.spawn.point} is not set:
				send "{@Essentials-spawn-no-spawn-point}" to player
				stop
			else:
				if arg 1 is not set:
					if {@Essentials-use-spawn-cooldown} is true:
						if player doesn't have permission "essentials.spawn.bypass" or "essentials.*":
							send "{@Essentials-spawn-teleport-player-coodown}" to player
							set {Essentials.back.use.%player%} to location of player
							wait {@Essentials-teleport-spawn-cooldown} seconds
							teleport player to {Essentials.spawn.point}
							send "{@Essentials-spawn-teleport-player}" to player
							stop
						else:
							set {Essentials.back.use.%player%} to location of player
							teleport player to {Essentials.spawn.point}
							send "{@Essentials-spawn-teleport-player}" to player
							stop
					if {@Essentials-use-spawn-cooldown} is false:
						set {Essentials.back.use.%player%} to location of player
						teleport player to {Essentials.spawn.point}
						send "{@Essentials-spawn-teleport-player}" to player
						stop
				if arg 1 is online:
					if arg 1 is not "%player%":
						if player doesn't have permission "essentials.spawn.others" or "essentials.*":
							send "{@Essentials-player-has-not-permission-use-commands}" to player
							stop
						else:
							set {Essentials.back.use.%arg 1%} to location of arg 1
							teleport arg 1 to {Essentials.spawn.point}
							send "{@Essentials-spawn-teleport-player}" to arg 1
							send "{@Essentials-spawn-teleport-player-admin}" to console
							stop
					else:
						send "{@Essentials-spawn-teleport-player-of-me}" to player
						stop
				if arg 1 is offline:
					if player doesn't have permission "essentials.spawn.others" or "essentials.*":
						send "{@Essentials-player-has-not-permission-use-commands}" to player
						stop
					else:
						send "{@Essentials-if-player-is-not-set-to-argument}" to player
						stop
		if sender is console:
			if {Essentials.spawn.point} is not set:
				send "{@Essentials-spawn-no-spawn-point}" to console
				stop
			else:
				if arg 1 is not set:
					send "{@Essentials-if-player-is-not-set-to-argument}" to console
					stop
				if arg 1 is online:
					set {Essentials.back.use.%arg 1%} to location of arg 1
					teleport arg 1 to {Essentials.spawn.point}
					send "{@Essentials-spawn-teleport-player}" to arg 1
					send "{@Essentials-spawn-teleport-player-admin}" to console
					stop
				if arg 1 is offline:
					send "{@Essentials-if-player-is-not-set-to-argument}" to console
					stop

on command "/spawn":
	if sender is a player:
		if player has permission "essentials.spawn" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:spawn":
	if sender is a player:
		if player has permission "essentials.spawn" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on load:
	set {Essentials-teleport-spawn-cooldown.variable} to "{@Essentials-teleport-spawn-cooldown}"
	set {Essentials-teleport-warp-cooldown.variable} to "{@Essentials-teleport-warp-cooldown}"
	set {Essentials-teleport-home-cooldown.variable} to "{@Essentials-teleport-home-cooldown}"
	set {Essentials-teleport-back-cooldown.variable} to "{@Essentials-teleport-back-cooldown}"
	set {Essentials-teleport-tpa-cooldown.variable} to "{@Essentials-teleport-tpa-cooldown}"
	set {Essentials-give-kit-cooldown.variable} to "{@Essentials-give-kit-cooldown}"
	set {Essentials-kick-maintenance-cooldown.variable} to "{@Essentials-maintenance-cooldown}"
	set {Essentials-randomteleport-teleport-cooldown.variable} to "{@Essentials-randomteleport-teleport-cooldown}"
	stop

command /setspawn [<text>]:
	executable by: player and console
	aliases: essentials:setspawn
	description: &fEssentials command /setspawn !
	trigger:
		if sender is a player:
			send "{@Essentials-setspawn-set-spawn-point}" to player
			set {Essentials.spawn.point} to location of player
			stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/setspawn":
	if sender is a player:
		if player has permission "essentials.setspawn" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:setspawn":
	if sender is a player:
		if player has permission "essentials.setspawn" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

command /delspawn [<text>]:
	executable by: player and console
	aliases: essentials:delspawn
	description: &fEssentials command /delspawn !
	trigger:
		if sender is a player:
			if {Essentials.spawn.point} is set:
				delete {Essentials.spawn.point}
				send "{@Essentials-delspawn-delete-spawn-point}" to player
				stop
			else:
				send "{@Essentials-delspawn-no-spawn-point}" to player
				stop
		if sender is console:
			send "{@Essentials-if-sender-is-console-use-commands}" to console
			stop

on command "/delspawn":
	if sender is a player:
		if player has permission "essentials.delspawn" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop

on command "/essentials:delspawn":
	if sender is a player:
		if player has permission "essentials.delspawn" or "essentials.*":
			stop
		else:
			cancel event
			send "{@Essentials-player-has-not-permission-use-commands}" to player
			stop